{"version":3,"sources":["./node_modules/moment/locale ^\\.\\/.*$","./src/$_lazy_route_resource lazy","./src/app/about/about-routing.module.ts","./src/app/about/about.component.html","./src/app/about/about.component.scss","./src/app/about/about.component.ts","./src/app/about/about.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/cnpj/cnpj-add/cnpj-add.component.html","./src/app/cnpj/cnpj-add/cnpj-add.component.ts","./src/app/cnpj/cnpj-dialog/cnpj-dialog.component.html","./src/app/cnpj/cnpj-dialog/cnpj-dialog.component.ts","./src/app/cnpj/cnpj-edit/cnpj-edit.component.html","./src/app/cnpj/cnpj-edit/cnpj-edit.component.ts","./src/app/cnpj/cnpj-list/cnpj-list.component.html","./src/app/cnpj/cnpj-list/cnpj-list.component.scss","./src/app/cnpj/cnpj-list/cnpj-list.component.ts","./src/app/cnpj/cnpj-model.ts","./src/app/cnpj/cnpj-routing.module.ts","./src/app/cnpj/cnpj.module.ts","./src/app/cnpj/cnpj.service.ts","./src/app/core/authentication/authentication.guard.ts","./src/app/core/authentication/authentication.service.ts","./src/app/core/core.module.ts","./src/app/core/http/api-prefix.interceptor.ts","./src/app/core/http/cache.interceptor.ts","./src/app/core/http/error-handler.interceptor.ts","./src/app/core/http/http-cache.service.ts","./src/app/core/http/http.service.ts","./src/app/core/i18n.service.ts","./src/app/core/index.ts","./src/app/core/logger.service.ts","./src/app/core/model/datamodel.ts","./src/app/core/route-reusable-strategy.ts","./src/app/core/route.service.ts","./src/app/core/shell/shell.component.html","./src/app/core/shell/shell.component.scss","./src/app/core/shell/shell.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.scss","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.module.ts","./src/app/generic-parameter/generic-parameter-routing.module.ts","./src/app/generic-parameter/generic-parameter.component.html","./src/app/generic-parameter/generic-parameter.component.scss","./src/app/generic-parameter/generic-parameter.component.ts","./src/app/generic-parameter/generic-parameter.model.ts","./src/app/generic-parameter/generic-parameter.module.ts","./src/app/generic-parameter/generic-parameter.service.ts","./src/app/home/home-routing.module.ts","./src/app/home/home.component.html","./src/app/home/home.component.scss","./src/app/home/home.component.ts","./src/app/home/home.module.ts","./src/app/home/quote.service.ts","./src/app/login/forgot-password-component/forgot-password-component.html","./src/app/login/forgot-password-component/forgot-password-component.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.component.html","./src/app/login/login.component.scss","./src/app/login/login.component.ts","./src/app/login/login.model.ts","./src/app/login/login.module.ts","./src/app/login/login.service.ts","./src/app/login/redefine-password/redefine-password.component.html","./src/app/login/redefine-password/redefine-password.component.scss","./src/app/login/redefine-password/redefine-password.component.ts","./src/app/login/register-user/register.component.html","./src/app/login/register-user/register.component.scss","./src/app/login/register-user/register.component.ts","./src/app/login/register-user/register.service.ts","./src/app/material.module.ts","./src/app/queryrecords/queryrecord-list/queryrecord-list.component.html","./src/app/queryrecords/queryrecord-list/queryrecord-list.component.scss","./src/app/queryrecords/queryrecord-list/queryrecord-list.component.ts","./src/app/queryrecords/queryrecords-routing.module.ts","./src/app/queryrecords/queryrecords.model.ts","./src/app/queryrecords/queryrecords.module.ts","./src/app/queryrecords/queryrecords.service.ts","./src/app/shared/index.ts","./src/app/shared/loader/loader.component.html","./src/app/shared/loader/loader.component.scss","./src/app/shared/loader/loader.component.ts","./src/app/shared/shared.module.ts","./src/app/shared/validators/date.validator.ts","./src/app/update-parameter/update-parameter-routing.module.ts","./src/app/update-parameter/update-parameter.component.html","./src/app/update-parameter/update-parameter.component.scss","./src/app/update-parameter/update-parameter.component.ts","./src/app/update-parameter/update-parameter.model.ts","./src/app/update-parameter/update-parameter.module.ts","./src/app/update-parameter/update-parameter.service.ts","./src/app/user/user-add/user-add.component.html","./src/app/user/user-add/user-add.component.ts","./src/app/user/user-cnpj/user-cnpj.component.html","./src/app/user/user-cnpj/user-cnpj.component.scss","./src/app/user/user-cnpj/user-cnpj.component.ts","./src/app/user/user-edit/user-edit.component.html","./src/app/user/user-edit/user-edit.component.ts","./src/app/user/user-list/user-list.component.html","./src/app/user/user-list/user-list.component.scss","./src/app/user/user-list/user-list.component.ts","./src/app/user/user-model.ts","./src/app/user/user-profile/user-profile.component.html","./src/app/user/user-profile/user-profile.component.scss","./src/app/user/user-profile/user-profile.component.ts","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts","./src/app/user/user.service.ts","./src/environments/environment.ts","./src/main.ts","./src/translations/pt-BR.json"],"names":[],"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale recursive ^\\\\.\\\\/.*$\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = ./node_modules/moment/locale recursive ^\\.\\/.*$\n// module chunks = main","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Route, extract } from '@app/core';\nimport { AboutComponent } from './about.component';\n\nconst routes: Routes = [\n  Route.withShell([\n    { path: 'about', component: AboutComponent, data: { title: extract('About') } }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AboutRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/about/about-routing.module.ts","module.exports = \"<div class=\\\"container\\\">\\n  <mat-card>\\n    <h1>\\n      <mat-card-title translate>APP_NAME</mat-card-title>\\n    </h1>\\n    <mat-card-content>\\n      <mat-icon>code</mat-icon>\\n      <span translate>Version</span> {{version}}\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.html\n// module id = ./src/app/about/about.component.html\n// module chunks = main","module.exports = \".container {\\n  text-align: center;\\n  padding: 1rem; }\\n\\n.mat-icon {\\n  vertical-align: middle; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.scss\n// module id = ./src/app/about/about.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  version: string = environment.version;\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/about/about.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from '@app/material.module';\nimport { AboutRoutingModule } from './about-routing.module';\nimport { AboutComponent } from './about.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FlexLayoutModule,\n    MaterialModule,\n    AboutRoutingModule\n  ],\n  declarations: [\n    AboutComponent\n  ]\n})\nexport class AboutModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/about/about.module.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  // Fallback when no prior route is matched\n  { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \":host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = ./src/app/app.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { merge } from 'rxjs/observable/merge';\nimport { filter, map, mergeMap } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger, I18nService } from '@app/core';\n\nconst log = new Logger('financ');\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private titleService: Title,\n              private translateService: TranslateService,\n              private i18nService: I18nService) { }\n\n  ngOnInit() {\n    // Setup logger\n    if (environment.production) {\n      Logger.enableProductionMode();\n    }\n\n    log.debug('init');\n\n    // Setup translations\n    this.i18nService.init(environment.defaultLanguage, environment.supportedLanguages);\n\n    const onNavigationEnd = this.router.events.pipe(filter(event => event instanceof NavigationEnd));\n\n    // Change page title on navigation or language change, based on route data\n    merge(this.translateService.onLangChange, onNavigationEnd)\n      .pipe(\n        map(() => {\n          let route = this.activatedRoute;\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter(route => route.outlet === 'primary'),\n        mergeMap(route => route.data)\n      )\n      .subscribe(event => {\n        const title = event['title'];\n        if (title) {\n          this.titleService.setTitle(this.translateService.instant(title));\n        }\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, LOCALE_ID } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material.module';\r\n\r\n\r\nimport { environment } from '@env/environment';\r\nimport { CoreModule, I18nService } from '@app/core';\r\nimport { SharedModule } from '@app/shared';\r\nimport { HomeModule } from './home/home.module';\r\nimport { AboutModule } from './about/about.module';\r\nimport { LoginModule } from './login/login.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DashboardModule } from './dashboard/dashboard.module';\r\nimport { UserModule } from '@app/user/user.module';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material';\r\nimport { GenericParameterModule } from '@app/generic-parameter/generic-parameter.module';\r\nimport { UpdateParameterModule } from '@app/update-parameter/update-parameter.module';\r\nimport { CNPJModule } from '@app/cnpj/cnpj.module';\r\nimport { QueryrecordsModule } from '@app/queryrecords/queryrecords.module'; \r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production }),\r\n    FormsModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    HomeModule,\r\n    AboutModule,\r\n    LoginModule,\r\n    DashboardModule,\r\n    UserModule,\r\n    GenericParameterModule,\r\n    UpdateParameterModule,\r\n    CNPJModule,\r\n    QueryrecordsModule,\r\n    AppRoutingModule\r\n  ],\r\n  declarations: [AppComponent],\r\n  providers: [  {provide: MAT_DATE_LOCALE, useValue: getLanguage}],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\nexport function getLanguage(settingsService: I18nService) {\r\n  return settingsService.language;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<h2 mat-dialog-title translate>\\n  registerCnpj.insert</h2>\\n<mat-dialog-content>\\n  <form (ngSubmit)=\\\"submit\\\" [formGroup]=\\\"form\\\">\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput #input class=\\\"form-control\\\" [textMask]=\\\"{mask: cnpjMask , guide: false, modelClean: true}\\\" type=\\\"text\\\" placeholder=\\\"{{ 'registerCnpj.cnpj' | translate }}\\\"\\n        formControlName=\\\"cnpj\\\" [(ngModel)]=\\\"data.cnpj\\\">\\n      <mat-error *ngIf=\\\"form.controls.cnpj.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'registerCnpj.fullName' | translate }}\\\" formControlName=\\\"fullName\\\"\\n        [(ngModel)]=\\\"data.fullName\\\">\\n      <mat-error *ngIf=\\\"form.controls.fullName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n    </mat-form-field>\\n\\n    <div class=\\\"selected-value\\\">{{ 'registerCnpj.category' | translate }}</div>\\n    <mat-radio-group style=\\\"margin-top: 10px;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"data.category\\\" formControlName=\\\"category\\\">\\n        <mat-radio-button class=\\\"radio-button\\\" *ngFor=\\\"let category of categorys\\\" [value]=\\\"category.value\\\">\\n          {{category.viewValue}}\\n        </mat-radio-button>\\n        \\n    </mat-radio-group>\\n    <!-- <br><br>\\n    <mat-checkbox class=\\\"form-control\\\" [(ngModel)]=\\\"data.active\\\" formControlName=\\\"active\\\">{{ 'registerCnpj.active' | translate }}\\n    </mat-checkbox> -->\\n   \\n\\n\\n    <!-- <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'registerCnpj.fullName' | translate }}\\\" formControlName=\\\"fullName\\\"\\n          [(ngModel)]=\\\"data.active\\\"> -->\\n\\n\\n\\n  </form>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n  <button class=\\\"mat-raised-button\\\" mat-button [type]=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmAdd()\\\"\\n    translate>{{ 'save' | translate }}</button>\\n  <button class=\\\"mat-raised-button\\\" mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">{{ 'cancel' | translate }}</button>\\n</mat-dialog-actions>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cnpj/cnpj-add/cnpj-add.component.html\n// module id = ./src/app/cnpj/cnpj-add/cnpj-add.component.html\n// module chunks = main","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {Component, Inject, OnInit} from '@angular/core';\nimport {CNPJService} from '../../cnpj/cnpj.service';\nimport {FormGroup, Validators, FormControl} from '@angular/forms';\nimport { RegisterCNPJ } from '@app/cnpj/cnpj-model';\nimport { I18nService, extract } from '@app/core';\nimport { EmailValidator,CustomValidator } from '@app/shared/validators';\nimport { DateValidator } from '@app/shared/validators/date.validator';\nimport { PhoneValidator } from '@app/shared/validators/phone.validator';\n\n\n\n\n@Component({\n  selector: 'app-add.dialog',\n  templateUrl: './cnpj-add.component.html'\n})\n\nexport class CNPJAddDialogComponent implements OnInit {\n  hide:any;\n  hideConf:any;\n  cnpj:RegisterCNPJ = new RegisterCNPJ();\n  \n  form: FormGroup;\n\n  actives = [\n    {value: true,   viewValue: 'Sim'},\n    {value: false,  viewValue: 'Não'}\n  ];\n\n  categorys = [\n    {value: 0,  viewValue: 'Alimentos'},\n    {value: 1,  viewValue: 'Cosmeticos'},\n    {value: 2,  viewValue: 'Saneantes'}\n    // {value: 3,  viewValue: 'Todas'}\n  ];\n\n  public cnpjMask = [ /\\d/ , /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/ , /\\d/, /\\d/, '/', /\\d/, /\\d/,/\\d/, /\\d/, '-', /\\d/, /\\d/,];\n  constructor(public dialogRef: MatDialogRef<CNPJAddDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RegisterCNPJ,\n              public dataService: CNPJService,\n              public i18n: I18nService) {\n                  \n  }\n  \n  ngOnInit() {\n      this.form  = new FormGroup({\n        cnpj:      new FormControl('', [Validators.required]),\n        fullName:  new FormControl('', [Validators.required]),\n        category:  new FormControl('', [Validators.required]),\n        acitve:    new FormControl('', [])\n        \n    });\n  }\n\n  getErrorMessage() {\n    return this.form.controls.fullName.hasError('required') ? 'fieldEmpty' :\n           this.form.controls.cnpj.hasError('required') ? 'fieldEmpty' :\n           this.form.controls.category.hasError('required') ? 'fieldEmpty' :\n            '';\n  }\n\n  submit() {\n  // emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n\n    this.dataService.save(this.data);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/cnpj/cnpj-add/cnpj-add.component.ts","module.exports = \"<h2 mat-dialog-title translate>\\n  registerCnpj.insert</h2>\\n \\n  <mat-dialog-content >\\n    <form  (ngSubmit)=\\\"submit\\\" [formGroup]=\\\"form\\\">\\n\\n            <mat-selection-list #list [(ngModel)]=\\\"selectedOptions\\\" formControlName=\\\"cnpj\\\" (ngModelChange)=\\\"onNgModelChange($event)\\\">\\n                <mat-list-option *ngFor=\\\"let register of cnpjs\\\" [value]=\\\"register\\\">\\n                    {{register.fullName}}\\n                </mat-list-option>\\n            </mat-selection-list>\\n\\n    </form>\\n\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n  <button class=\\\"mat-raised-button\\\" mat-button [type]=\\\"submit\\\"  [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmAdd()\\\"\\n    translate>{{ 'Ok' | translate }}</button>\\n  <button class=\\\"mat-raised-button\\\" mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">{{ 'cancel' | translate }}</button>\\n</mat-dialog-actions>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cnpj/cnpj-dialog/cnpj-dialog.component.html\n// module id = ./src/app/cnpj/cnpj-dialog/cnpj-dialog.component.html\n// module chunks = main","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {Component, Inject, OnInit} from '@angular/core';\nimport {CNPJService} from '../../cnpj/cnpj.service';\nimport {FormGroup, Validators, FormControl} from '@angular/forms';\nimport { RegisterCNPJ } from '@app/cnpj/cnpj-model';\nimport { I18nService, extract } from '@app/core';\nimport { EmailValidator,CustomValidator } from '@app/shared/validators';\nimport { DateValidator } from '@app/shared/validators/date.validator';\nimport { PhoneValidator } from '@app/shared/validators/phone.validator';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { UserService } from '@app/user/user.service';\n\n\n\n\n@Component({\n  selector: 'app-cnpj.dialog',\n  templateUrl: './cnpj-dialog.component.html'\n})\n\nexport class CNPJDialogComponent implements OnInit {\n  hide:any;\n  hideConf:any;\n  \n  error: HttpErrorResponse;  \n  cnpjs: RegisterCNPJ[];\n  selectedOptions:RegisterCNPJ[];\n  form: FormGroup;\n\n  public cnpjMask = [ /\\d/ , /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/ , /\\d/, /\\d/, '/', /\\d/, /\\d/,/\\d/, /\\d/, '-', /\\d/, /\\d/,];\n  constructor(public dialogRef: MatDialogRef<CNPJDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RegisterCNPJ,\n              public dataService: CNPJService,\n              public dataServiceUser: UserService,\n              public i18n: I18nService) {\n                  \n  }\n  \n  ngOnInit() {\n    this.loadData();\n    this.form = new FormGroup({\n      cnpj: new FormControl('', [])\n    });\n  }\n\n  submit() {\n  \n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n       this.dataService.saveCnpjUser(this.selectedOptions);\n  }\n  onNgModelChange(event: Event) {\n    console.log(event);\n  }\n  \n  maskCnpj(valor: string):string {\n    return valor.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/g,\"\\$1.\\$2.\\$3\\/\\$4\\-\\$5\");\n }\n  public loadData() {\n\n    this.dataService.getCNPJs()\n                    .subscribe(\n                      data => {\n                        this.cnpjs = data;\n                        \n                      },\n                      error => {\n                        this.error = error;\n                        alert(error); \n                      });\n  \n} \n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/cnpj/cnpj-dialog/cnpj-dialog.component.ts","module.exports = \"<h2 mat-dialog-title translate>\\n    registerCnpj.edit</h2>\\n  <mat-dialog-content>\\n    <form (ngSubmit)=\\\"submit\\\" [formGroup]=\\\"form\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput #input class=\\\"form-control\\\" [textMask]=\\\"{mask: cnpjMask , guide: false, modelClean: true}\\\" type=\\\"text\\\" placeholder=\\\"{{ 'registerCnpj.cnpj' | translate }}\\\"\\n          formControlName=\\\"cnpj\\\" [(ngModel)]=\\\"data.cnpj\\\">\\n        <mat-error *ngIf=\\\"form.controls.cnpj.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n      </mat-form-field>\\n  \\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'registerCnpj.fullName' | translate }}\\\" formControlName=\\\"fullName\\\"\\n          [(ngModel)]=\\\"data.fullName\\\">\\n        <mat-error *ngIf=\\\"form.controls.fullName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n      </mat-form-field>\\n  \\n      <div class=\\\"selected-value\\\">{{ 'registerCnpj.category' | translate }}</div>\\n      <mat-radio-group style=\\\"margin-top: 10px;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"data.category\\\" formControlName=\\\"category\\\">\\n          <mat-radio-button class=\\\"radio-button\\\" *ngFor=\\\"let category of categorys\\\" [value]=\\\"category.value\\\">\\n            {{category.viewValue}}\\n          </mat-radio-button>\\n          \\n      </mat-radio-group>\\n      <!-- <br><br>\\n      <mat-checkbox class=\\\"form-control\\\" [(ngModel)]=\\\"data.active\\\" formControlName=\\\"active\\\">{{ 'registerCnpj.active' | translate }}\\n      </mat-checkbox> -->\\n     \\n  \\n  \\n      <!-- <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'registerCnpj.fullName' | translate }}\\\" formControlName=\\\"fullName\\\"\\n            [(ngModel)]=\\\"data.active\\\"> -->\\n  \\n  \\n  \\n    </form>\\n  </mat-dialog-content>\\n  \\n  <mat-dialog-actions>\\n    <button class=\\\"mat-raised-button\\\" mat-button [type]=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmAdd()\\\"\\n      translate>{{ 'save' | translate }}</button>\\n    <button class=\\\"mat-raised-button\\\" mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">{{ 'cancel' | translate }}</button>\\n  </mat-dialog-actions>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cnpj/cnpj-edit/cnpj-edit.component.html\n// module id = ./src/app/cnpj/cnpj-edit/cnpj-edit.component.html\n// module chunks = main","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {Component, Inject, OnInit} from '@angular/core';\nimport {CNPJService} from '../../cnpj/cnpj.service';\nimport {FormGroup, Validators, FormControl} from '@angular/forms';\nimport { RegisterCNPJ } from '@app/cnpj/cnpj-model';\nimport { I18nService, extract } from '@app/core';\nimport { EmailValidator,CustomValidator } from '@app/shared/validators';\nimport { DateValidator } from '@app/shared/validators/date.validator';\nimport { PhoneValidator } from '@app/shared/validators/phone.validator';\n\n\n\n\n@Component({\n  selector: 'app-edit.dialog',\n  templateUrl: './cnpj-edit.component.html'\n})\n\nexport class CNPJEditDialogComponent implements OnInit {\n  hide:any;\n  hideConf:any;\n  cnpj:RegisterCNPJ = new RegisterCNPJ();\n  \n  form: FormGroup;\n\n  actives = [\n    {value: true,   viewValue: 'Sim'},\n    {value: false,  viewValue: 'Não'}\n  ];\n\n  categorys = [\n    {value: 0,  viewValue: 'Alimentos'},\n    {value: 1,  viewValue: 'Cosmeticos'},\n    {value: 2,  viewValue: 'Saneantes'},\n    {value: 3,  viewValue: 'Todas'}\n  ];\n\n  public cnpjMask = [ /\\d/ , /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/ , /\\d/, /\\d/, '/', /\\d/, /\\d/,/\\d/, /\\d/, '-', /\\d/, /\\d/,];\n  constructor(public dialogRef: MatDialogRef<CNPJEditDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RegisterCNPJ,\n              public dataService: CNPJService,\n              public i18n: I18nService) {\n                  \n  }\n  \n  ngOnInit() {\n      this.form  = new FormGroup({\n        cnpj:      new FormControl('', [Validators.required]),\n        fullName:  new FormControl('', [Validators.required]),\n        category:  new FormControl('', [Validators.required]),\n        acitve:    new FormControl('', [])\n        \n    });\n  }\n\n  getErrorMessage() {\n    return this.form.controls.fullName.hasError('required') ? 'fieldEmpty' :\n           this.form.controls.cnpj.hasError('required') ? 'fieldEmpty' :\n           this.form.controls.category.hasError('required') ? 'fieldEmpty' :\n            '';\n  }\n\n  submit() {\n  // emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n\n    this.dataService.save(this.data);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/cnpj/cnpj-edit/cnpj-edit.component.ts","module.exports = \"<div class=\\\"table-container mat-elevation-z8\\\">\\n\\n\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Digite o que procura\\\">\\n  </mat-form-field>\\n\\n\\n  <mat-table #table class=\\\"mat-table mat-elevation-z12\\\" [dataSource]=\\\"dataSource\\\" matSort>\\n    \\n    <!-- CNPJ Column -->\\n    <ng-container matColumnDef=\\\"cnpj\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'registerCnpj.cnpj' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let CNPJ\\\"> {{maskCnpj(CNPJ.cnpj)}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Full Name Column -->\\n    <ng-container matColumnDef=\\\"fullName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'registerCnpj.fullName' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let CNPJ\\\"> {{CNPJ.fullName}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- category Column -->\\n    <ng-container matColumnDef=\\\"category\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'registerCnpj.category' | translate }}</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let CNPJ\\\"> {{ getCategory(CNPJ.category)}} </mat-cell>\\n      </ng-container>\\n\\n    <!-- active Column -->\\n    <!-- <ng-container matColumnDef=\\\"active\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'registerCnpj.active' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let CNPJ\\\"> {{ getActive(CNPJ.active)}} </mat-cell>\\n    </ng-container> -->\\n\\n\\n\\n    <!-- actions -->\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n        </button>\\n      </mat-header-cell>\\n\\n      <mat-cell *matCellDef=\\\"let CNPJ; let i=index;\\\">\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"startEdit(i, CNPJ)\\\">\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n        </button>\\n\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"deleteItem(CNPJ.id)\\\">\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n        </button>\\n\\n\\n      </mat-cell>\\n\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n\\n    </mat-row>\\n    \\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n <!-- <mat-paginator [length]=\\\"length\\\"\\n              [pageSize]=\\\"pageSize\\\"\\n              [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n              (page)=\\\"pageEvent = $event\\\">\\n  </mat-paginator> -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cnpj/cnpj-list/cnpj-list.component.html\n// module id = ./src/app/cnpj/cnpj-list/cnpj-list.component.html\n// module chunks = main","module.exports = \"::ng-deep .column {\\n  width: 99%; }\\n\\n::ng-deep .full-width {\\n  width: 99%; }\\n\\n::ng-deep .auto-width {\\n  width: auto; }\\n\\n/* Clear floats after the columns */\\n\\n::ng-deep .row:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both; }\\n\\n::ng-deep .mat-dialog-title {\\n  background-color: #001E64;\\n  color: white;\\n  text-align: center; }\\n\\n::ng-deep .mat-dialog-container {\\n  overflow: hidden !important;\\n  border-radius: 5px !important;\\n  padding: 5px !important;\\n  background-color: #e0e4fa;\\n  height: -webkit-max-content;\\n  height: -moz-max-content;\\n  height: max-content; }\\n\\n::ng-deep .mat-dialog-actions {\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n\\n::ng-deep .mat-dialog-actions .mat-button {\\n    background-color: #001E64;\\n    -webkit-text-fill-color: white;\\n    margin-bottom: 15px; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:disabled(:first-child) {\\n      background-color: #001E64;\\n      -webkit-text-fill-color: black; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:not(:first-child), ::ng-deep .mat-dialog-actions .mat-button :not(:last-child) {\\n      -webkit-text-fill-color: white; }\\n\\n::ng-deep .flex-spacer {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto; }\\n\\n::ng-deep .mat-form-field {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-checkbox {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-radio-group {\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column; }\\n\\n::ng-deep .mat-radio-button {\\n  margin: 5px; }\\n\\n.selected-value {\\n  margin: 15px 0; }\\n\\n::ng-deep .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .span-label {\\n  font-size: 8px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-focused .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline .mat-form-field-ripple {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-button, .mat-raised-button {\\n  background-color: #001E64;\\n  -webkit-text-decoration-color: white;\\n          text-decoration-color: white; }\\n\\n::ng-deep .mat-success {\\n  background-color: #001E64;\\n  color: black; }\\n\\n::ng-deep .mat-button-focus {\\n  background-color: #001E64;\\n  color: black; }\\n\\n.mat-cell:nth-child(1),\\n.mat-header-cell:nth-child(1) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 150px;\\n          flex: 0 0 150px; }\\n\\n.mat-cell:nth-child(2),\\n.mat-header-cell:nth-child(2) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 350px;\\n          flex: 0 0 350px; }\\n\\n.mat-cell:nth-child(3),\\n.mat-header-cell:nth-child(3) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 200px;\\n          flex: 0 0 200px; }\\n\\n.mat-cell:nth-child(4),\\n.mat-header-cell:nth-child(4) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 200px;\\n          flex: 0 0 200px; }\\n\\n.mat-cell:nth-child(5) {\\n  -webkit-text-fill-color: #001E64; }\\n\\n.mat-header-cell:nth-child(6) {\\n  -webkit-text-fill-color: white;\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 10%;\\n          flex: 0 0 10%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cnpj/cnpj-list/cnpj-list.component.scss\n// module id = ./src/app/cnpj/cnpj-list/cnpj-list.component.scss\n// module chunks = main","import { Component, ElementRef, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatPaginator,MatTableDataSource, MatSort, MatDialog, PageEvent } from '@angular/material';\n\nimport { RegisterCNPJ } from '@app/cnpj/cnpj-model';\nimport { CNPJAddDialogComponent } from '@app/cnpj/cnpj-add/cnpj-add.component';\nimport { CNPJEditDialogComponent } from '@app/cnpj/cnpj-edit/cnpj-edit.component';\nimport { I18nService } from '@app/core';\nimport { CNPJService } from '@app/cnpj/cnpj.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-cnpj-list',\n  templateUrl: './cnpj-list.component.html',\n  styleUrls: ['./cnpj-list.component.scss']\n})\n\n\n\nexport class CNPJListComponent implements AfterViewInit {\n  \n  error: HttpErrorResponse;\n  displayedColumns = ['cnpj', 'fullName', 'category', 'actions'];\n  ELEMENT_DATA: RegisterCNPJ[]; \n\n  isExpansionDetailRow = (i: number, row: any) => \n  row.hasOwnProperty('detailRow');\n  constructor( public dialog: MatDialog,\n               public dataService: CNPJService,\n               public i18nService: I18nService) { \n\n  }\n\n  public actives = [\n    {value: true,   viewValue: 'Sim'},\n    {value: false,  viewValue: 'Não'}\n  ];\n\n  public categorys = [\n    'Alimentos',\n    'Cosmeticos',\n    'Saneantes',\n    'Todos'\n  ];\n\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions = [5, 10, 25, 100];\n\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild('filter') filter: ElementRef;\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  ngOnInit() {\n    this.loadData();\n    this.dataSource.sort      = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n  ngAfterViewInit() {\n\n    \n  }\n\n  addNew(registerCnpj: RegisterCNPJ) {\n    const dialogRef = this.dialog.open(CNPJAddDialogComponent, {data: {registerCNPJ: registerCnpj},\n      height: 'max-content',\n      width: 'max-content'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        // this.dataSource.dataChange.value.push(this.dataService.getDialogData());\n        //this.refreshTable();\n        this.dataSource.data.push(this.dataService.getDialogData());\n      }\n    });\n  }\n\n  startEdit(i: number) {\n    let cnpjEdit = this.ELEMENT_DATA[i];\n    console.log(JSON.stringify(cnpjEdit));\n    const dialogRef = this.dialog.open(CNPJEditDialogComponent, {data:cnpjEdit,\n      height: 'max-content+10px',\n      width: 'max-content'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.dataSource.data.push(this.dataService.getDialogData());\n        //this.dataSource.data. refreshTable();\n      }\n    });\n  }\n\n  deleteItem(id: number) {\n    this.dataService.deleteCNPJ(id);\n    this.dataSource.data.push(this.dataService.getDialogData());\n  }\n\n  public getActive(active: boolean): string {\n      return active?\"Sim\":\"Não\"; \n  }\n\n  public getCategory(category: number): string {\n    return this.categorys[category]; \n  }\n \n  public loadData() {\n\n      this.dataService.getAllCNPJs()\n                      .subscribe(\n                        data => {\n                          this.ELEMENT_DATA = data;\n                          this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n                        },\n                        error => {\n                          this.error = error;\n                          alert(error); \n                        });\n    \n  } \n    \n maskCnpj(valor: string):string {\n    return valor.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/g,\"\\$1.\\$2.\\$3\\/\\$4\\-\\$5\");\n }\n      \n    \n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cnpj/cnpj-list/cnpj-list.component.ts","import { DataModel } from \"@app/core/model/datamodel\";\r\nimport { User } from \"@app/user/user-model\";\r\n\r\nexport class RegisterCNPJ extends DataModel {\r\n     id: number;\r\n     cnpj: string;\r\n     fullName:string;\r\n     active: boolean;\r\n     category: number;\r\n     insertUser:User;\r\n     insertDate:Date;\r\n     updateUser:User;\r\n     updateDate:Date;\r\n    constructor(){\r\n        super(null);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/cnpj/cnpj-model.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CNPJListComponent } from '@app/cnpj/cnpj-list/cnpj-list.component';\nimport { Route, extract } from '@app/core';\n\nconst routes: Routes = [\n  Route.withShell([\n  { path: 'cnpjList', component: CNPJListComponent, data: { title: extract('registerCnpj.insert') } }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class CNPJRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cnpj/cnpj-routing.module.ts","import { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { CNPJRoutingModule } from './cnpj-routing.module';\nimport { CNPJListComponent } from './cnpj-list/cnpj-list.component';\nimport { MaterialModule } from '@app/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CNPJAddDialogComponent } from './cnpj-add/cnpj-add.component';\nimport { CNPJEditDialogComponent } from './cnpj-edit/cnpj-edit.component';\nimport { CNPJDialogComponent} from './cnpj-dialog/cnpj-dialog.component';\nimport { CNPJService } from '@app/cnpj/cnpj.service';\nimport { SharedModule } from '../shared';\nimport { TextMaskModule } from 'angular2-text-mask';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FlexLayoutModule,\n    MaterialModule,\n    FormsModule, ReactiveFormsModule,\n    BrowserAnimationsModule,\n    CNPJRoutingModule,\n    SharedModule,\n    TextMaskModule\n  ],\n  exports:[CNPJListComponent],\n  entryComponents: [\n    CNPJAddDialogComponent,CNPJEditDialogComponent,CNPJDialogComponent],\n  declarations: [CNPJListComponent, CNPJAddDialogComponent,CNPJEditDialogComponent,CNPJDialogComponent],\n  providers:[CNPJService],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class CNPJModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cnpj/cnpj.module.ts","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport 'rxjs/Rx';\nimport {RegisterCNPJ} from '../cnpj/cnpj-model';\nimport {HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Headers, Http } from '@angular/http';\n \nimport 'rxjs/add/operator/toPromise';\n\nimport { Alert, error } from 'selenium-webdriver';\nimport { environment } from '@env/environment';\nimport { AuthenticationService } from '@app/core';\nimport { UserService } from '@app/user/user.service';\nimport { User } from '@app/user/user-model';\n\n\n@Injectable()\nexport class CNPJService {\n  private readonly API_URL = '/cnpj';\n  \n  dataChange: Observable<RegisterCNPJ[]> = new Observable<RegisterCNPJ[]>();\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  user:User;\n  private headers = new Headers({'Content-Type': 'application/json'});\n  constructor (private httpClient: HttpClient,\n              private autenticationService: AuthenticationService,\n              private userService: UserService) {\n     \n  }\n\n  get data(): Observable<RegisterCNPJ[]> {\n    return this.dataChange;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  /** CRUD METHODS */\n  getAllCNPJs(): Observable<RegisterCNPJ[]> {\n    return this.httpClient.get(this.API_URL+'/list')\n                    .map(response => response)\n                    .catch(error=> Observable.throw(error.message));\n  }\n\n  getCNPJs(): Observable<RegisterCNPJ[]> {\n    let id = this.autenticationService.credentials.id;\n    return this.httpClient.get(this.API_URL+'/listnotuser/'+id)\n                    .map(response => response)\n                    .catch(error=> Observable.throw(error.message));\n  }\n\n  // DEMO ONLY, you can find working methods below\n  save (cnpj: RegisterCNPJ): void {\n    this.dialogData = cnpj;\n    console.log(JSON.stringify(cnpj));\n\n    this.httpClient.post(this.API_URL+'/save', cnpj).subscribe(data => {\n      this.dialogData = cnpj;\n      \n      alert('Successfully added');\n      },\n      (err: HttpErrorResponse) => {\n        alert('Error occurred. Details: ' + err.name + ' ' + err.message);\n    });\n  }\n\n  saveCnpjUser(registers: RegisterCNPJ[]) {\n    let id = this.autenticationService.credentials.id;\n    \n    this.httpClient.post(this.API_URL+'/savecnpjuser/'+id, registers).subscribe(data => {\n      alert('Registro salvo com sucesso!');\n   },\n      (err: HttpErrorResponse) => {\n        alert('Error occurred. Details: ' + err.name + ' ' + err.message);\n    });\n\n  }\n\n  updateCNPJ (cnpj: RegisterCNPJ): void {\n    this.dialogData = cnpj;\n  }\n\n  deleteCNPJ (id: number): void {\n    this.httpClient.delete(this.API_URL+'/delete/'+id).subscribe(data => {\n      //this.dialogData = cnpj;\n      \n      alert('Successfully delete');\n      },\n      (err: HttpErrorResponse) => {\n        alert('Error occurred. Details: ' + err.name + ' ' + err.message);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cnpj/cnpj.service.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\n\nimport { Logger } from '../logger.service';\nimport { AuthenticationService } from './authentication.service';\n\nconst log = new Logger('AuthenticationGuard');\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n\n  constructor(private router: Router,\n              private authenticationService: AuthenticationService) { }\n\n  canActivate(): boolean {\n    if (this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    log.debug('Not authenticated, redirecting...');\n    this.router.navigate(['/login'], { replaceUrl: true });\n    return false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/authentication/authentication.guard.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { LoginService } from '@app/login/login.service';\nimport { User } from '@app/user/user-model';\nimport {HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Login } from '@app/login/login.model';\n\n\n\n\nexport interface Credentials {\n  // Customize received credentials here\n  id: number;\n  username: string;\n  email: string;\n  token: string;\n}\n\nexport interface LoginContext {\n  id: number;\n  username: string;\n  password: string;\n  remember?: boolean;\n}\n\nconst credentialsKey = 'credentials';\n\n/**\n * Provides a base for authentication workflow.\n * The Credentials interface as well as login/logout methods should be replaced with proper implementation.\n */\n@Injectable()\nexport class AuthenticationService {\n\n  private _credentials: Credentials | null;\n  private readonly API_URL = '/login';\n\n  constructor(private httpClient: HttpClient) {\n    const savedCredentials = sessionStorage.getItem(credentialsKey) || localStorage.getItem(credentialsKey);\n    if (savedCredentials) {\n      this._credentials = JSON.parse(savedCredentials);\n    }\n  }\n\n  /**\n   * Authenticates the user.\n   * @param {LoginContext} context The login parameters.\n   * @return {Observable<Credentials>} The user credentials.\n   */\n  login(context: LoginContext): Observable<Credentials> {\n    // Replace by proper authentication call\n    let data = { id:context.id, username: context.username,email: \"\",\n      token: '123456'}\n    this.httpClient.post(this.API_URL, new Login(context.username,context.password,\"\")).subscribe(dataLogin => {\n        let user = dataLogin;\n        data.id = user['id'];\n        this.setCredentials(data, context.remember);\n        return of(data);\n      },\n      (err: HttpErrorResponse) => {\n        data = {\n          id: null,\n          username: null,\n          email: null,\n          token: null\n        };\n        Observable.throw(err.error);\n    });\n    return of(data);\n    \n  }\n\n  /**\n   * Authenticates the user.\n   * @param {LoginContext} context The login parameters.\n   * @return {Observable<Credentials>} The user credentials.\n   */\n  getEmail(context: LoginContext): Observable<User> {\n    \n    return this.httpClient.get(this.API_URL+'/getemail/'+context.username)\n    .map(response => response)\n    .catch(error=> Observable.throw(error.message));\n    \n  }\n\n    /**\n   * Authenticates the user.\n   * @param {LoginContext} context The login parameters.\n   * @return {Observable<Credentials>} The user credentials.\n   */\n  loadUser(id: number): Observable<User> {\n    if (id==null) {\n      id = this.credentials.id;\n    }\n    return this.httpClient.get(this.API_URL+'/loaduser/'+id)\n    .map(response => response)\n    .catch(error=> Observable.throw(error.message));\n    \n  }\n\n\n  /**\n   * Logs out the user and clear credentials.\n   * @return {Observable<boolean>} True if the user was logged out successfully.\n   */\n  logout(): Observable<boolean> {\n    // Customize credentials invalidation here\n    this.setCredentials();\n    return of(true);\n  }\n\n  /**\n   * Checks is the user is authenticated.\n   * @return {boolean} True if the user is authenticated.\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Gets the user credentials.\n   * @return {Credentials} The user credentials or null if the user is not authenticated.\n   */\n  get credentials(): Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Sets the user credentials.\n   * The credentials may be persisted across sessions by setting the `remember` parameter to true.\n   * Otherwise, the credentials are only persisted for the current session.\n   * @param {Credentials=} credentials The user credentials.\n   * @param {boolean=} remember True to remember credentials across sessions.\n   */\n  private setCredentials(credentials?: Credentials, remember?: boolean) {\n    this._credentials = credentials || null;\n\n    if (credentials) {\n      const storage = remember ? localStorage : sessionStorage;\n      storage.setItem(credentialsKey, JSON.stringify(credentials));\n    } else {\n      sessionStorage.removeItem(credentialsKey);\n      localStorage.removeItem(credentialsKey);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/authentication/authentication.service.ts","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { MaterialModule } from '@app/material.module';\nimport { ShellComponent } from './shell/shell.component';\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport { AuthenticationService } from './authentication/authentication.service';\nimport { AuthenticationGuard } from './authentication/authentication.guard';\nimport { I18nService } from './i18n.service';\nimport { HttpService } from './http/http.service';\nimport { HttpCacheService } from './http/http-cache.service';\nimport { ApiPrefixInterceptor } from './http/api-prefix.interceptor';\nimport { ErrorHandlerInterceptor } from './http/error-handler.interceptor';\nimport { CacheInterceptor } from './http/cache.interceptor';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule, ReactiveFormsModule,\n    TranslateModule,\n    FlexLayoutModule,\n    MaterialModule,\n    RouterModule\n  ],\n  declarations: [\n    ShellComponent\n    \n  ],\n  providers: [\n    AuthenticationService,\n    AuthenticationGuard,\n    I18nService,\n    HttpCacheService,\n    ApiPrefixInterceptor,\n    ErrorHandlerInterceptor,\n    CacheInterceptor,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true\n    },\n    {\n      provide: HttpClient,\n      useClass: HttpService\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ]\n})\nexport class CoreModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    // Import guard\n    if (parentModule) {\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/core.module.ts","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { environment } from '@env/environment';\n\n/**\n * Prefixes all requests with `environment.serverUrl`.\n */\n@Injectable()\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({ url: environment.serverUrl + request.url });\n    return next.handle(request);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/http/api-prefix.interceptor.ts","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscriber } from 'rxjs/Subscriber';\n\nimport { HttpCacheService } from './http-cache.service';\n\n/**\n * Caches HTTP requests.\n * Use ExtendedHttpClient fluent API to configure caching for each request.\n */\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n\n  private forceUpdate = false;\n\n  constructor(private httpCacheService: HttpCacheService) { }\n\n  /**\n   * Configures interceptor options\n   * @param {{update: boolean}} options If update option is enabled, forces request to be made and updates cache entry.\n   * @return {CacheInterceptor} The configured instance.\n   */\n  configure(options?: { update?: boolean } | null): CacheInterceptor {\n    const instance = new CacheInterceptor(this.httpCacheService);\n    if (options && options.update) {\n      instance.forceUpdate = true;\n    }\n    return instance;\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (request.method !== 'GET') {\n      return next.handle(request);\n    }\n\n    return new Observable((subscriber: Subscriber<HttpEvent<any>>) => {\n      const cachedData = this.forceUpdate ? null : this.httpCacheService.getCacheData(request.urlWithParams);\n      if (cachedData !== null) {\n        // Create new response to avoid side-effects\n        subscriber.next(new HttpResponse(cachedData as Object));\n        subscriber.complete();\n      } else {\n        next.handle(request)\n          .subscribe(\n            event => {\n              if (event instanceof HttpResponse) {\n                this.httpCacheService.setCacheData(request.urlWithParams, event);\n              }\n              subscriber.next(event);\n            },\n            error => subscriber.error(error),\n            () => subscriber.complete()\n          );\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/http/cache.interceptor.ts","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { catchError } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger } from '../logger.service';\n\nconst log = new Logger('ErrorHandlerInterceptor');\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private errorHandler(response: HttpEvent<any>): Observable<HttpEvent<any>> {\n    if (!environment.production) {\n      // Do something with the error\n      log.error('Request error', response);\n    }\n    throw response;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/http/error-handler.interceptor.ts","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { each } from 'lodash';\n\nimport { Logger } from '../logger.service';\n\nconst log = new Logger('HttpCacheService');\nconst cachePersistenceKey = 'httpCache';\n\nexport interface HttpCacheEntry {\n  lastUpdated: Date;\n  data: HttpResponse<any>;\n}\n\n/**\n * Provides a cache facility for HTTP requests with configurable persistence policy.\n */\n@Injectable()\nexport class HttpCacheService {\n\n  private cachedData: { [key: string]: HttpCacheEntry; } = {};\n  private storage: Storage | null = null;\n\n  constructor() {\n    this.loadCacheData();\n  }\n\n  /**\n   * Sets the cache data for the specified request.\n   * @param {!string} url The request URL.\n   * @param {ResponseOptions} data The received data.\n   * @param {Date=} lastUpdated The cache last update, current date is used if not specified.\n   */\n  setCacheData(url: string, data: HttpResponse<any>, lastUpdated?: Date) {\n    this.cachedData[url] = {\n      lastUpdated: lastUpdated || new Date(),\n      data: data\n    };\n    log.debug(`Cache set for key: \"${url}\"`);\n    this.saveCacheData();\n  }\n\n  /**\n   * Gets the cached data for the specified request.\n   * @param {!string} url The request URL.\n   * @return {?ResponseOptions} The cached data or null if no cached data exists for this request.\n   */\n  getCacheData(url: string): HttpResponse<any> | null {\n    const cacheEntry = this.cachedData[url];\n\n    if (cacheEntry) {\n      log.debug(`Cache hit for key: \"${url}\"`);\n      return cacheEntry.data;\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets the cached entry for the specified request.\n   * @param {!string} url The request URL.\n   * @return {?HttpCacheEntry} The cache entry or null if no cache entry exists for this request.\n   */\n  getHttpCacheEntry(url: string): HttpCacheEntry | null {\n    return this.cachedData[url] || null;\n  }\n\n  /**\n   * Clears the cached entry (if exists) for the specified request.\n   * @param {!string} url The request URL.\n   */\n  clearCache(url: string): void {\n    delete this.cachedData[url];\n    log.debug(`Cache cleared for key: \"${url}\"`);\n    this.saveCacheData();\n  }\n\n  /**\n   * Cleans cache entries older than the specified date.\n   * @param {date=} expirationDate The cache expiration date. If no date is specified, all cache is cleared.\n   */\n  cleanCache(expirationDate?: Date) {\n    if (expirationDate) {\n      each(this.cachedData, (value: HttpCacheEntry, key: string) => {\n        if (expirationDate >= value.lastUpdated) {\n          delete this.cachedData[key];\n        }\n      });\n    } else {\n      this.cachedData = {};\n    }\n    this.saveCacheData();\n  }\n\n  /**\n   * Sets the cache persistence policy.\n   * Note that changing the cache persistence will also clear the cache from its previous storage.\n   * @param {'local'|'session'=} persistence How the cache should be persisted, it can be either local or session\n   *   storage, or if no value is provided it will be only in-memory (default).\n   */\n  setPersistence(persistence?: 'local' | 'session') {\n    this.cleanCache();\n    this.storage = persistence === 'local' || persistence === 'session' ? window[persistence + 'Storage'] : null;\n    this.loadCacheData();\n  }\n\n  private saveCacheData() {\n    if (this.storage) {\n      this.storage[cachePersistenceKey] = JSON.stringify(this.cachedData);\n    }\n  }\n\n  private loadCacheData() {\n    const data = this.storage ? this.storage[cachePersistenceKey] : null;\n    this.cachedData = data ? JSON.parse(data) : {};\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/http/http-cache.service.ts","import { Inject, Injectable, InjectionToken, Injector, Optional } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\nimport { CacheInterceptor } from './cache.interceptor';\n\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\ndeclare module '@angular/common/http/src/client' {\n\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n  // HttpClient with HttpService using dependency injection\n  export interface HttpClient {\n\n    /**\n     * Enables caching for this request.\n     * @param {boolean} forceUpdate Forces request to be made and updates cache entry.\n     * @return {HttpClient} The new instance.\n     */\n    cache(forceUpdate?: boolean): HttpClient;\n\n    /**\n     * Skips default error handler for this request.\n     * @return {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n\n  }\n\n}\n\n// From @angular/common/http/src/interceptor: allows to chain interceptors\nclass HttpInterceptorHandler implements HttpHandler {\n\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) { }\n\n  handle(request: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.interceptor.intercept(request, this.next);\n  }\n\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken<HttpInterceptor>('HTTP_DYNAMIC_INTERCEPTORS');\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n\n  constructor(private httpHandler: HttpHandler,\n              private injector: Injector,\n              @Optional() @Inject(HTTP_DYNAMIC_INTERCEPTORS) private interceptors: HttpInterceptor[] = []) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [this.injector.get(ErrorHandlerInterceptor)];\n    }\n  }\n\n  cache(forceUpdate?: boolean): HttpClient {\n    const cacheInterceptor = this.injector.get(CacheInterceptor).configure({ update: forceUpdate });\n    return this.addInterceptor(cacheInterceptor);\n  }\n\n  skipErrorHandler(): HttpClient {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  // Override the original method to wire interceptors when triggering the request.\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/http/http.service.ts","import { Injectable } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { includes } from 'lodash';\n\nimport { Logger } from './logger.service';\nimport * as ptBR from '../../translations/pt-BR.json';\nimport * as enUS from '../../translations/en-US.json';\n\nconst log = new Logger('I18nService');\nconst languageKey = 'language';\n\n/**\n * Pass-through function to mark a string for translation extraction.\n * Running `npm translations:extract` will include the given string by using this.\n * @param {string} s The string to extract for translation.\n * @return {string} The same string.\n */\nexport function extract(s: string) {\n  return s;\n}\n\n@Injectable()\nexport class I18nService {\n\n  defaultLanguage: string;\n  supportedLanguages: string[];\n\n  constructor(private translateService: TranslateService) {\n    // Embed languages to avoid extra HTTP requests\n    translateService.setTranslation('pt-BR', ptBR);\n    //translateService.setTranslation('en-US', enUS);\n  }\n\n  /**\n   * Initializes i18n for the application.\n   * Loads language from local storage if present, or sets default language.\n   * @param {!string} defaultLanguage The default language to use.\n   * @param {Array.<String>} supportedLanguages The list of supported languages.\n   */\n  init(defaultLanguage: string, supportedLanguages: string[]) {\n    this.defaultLanguage = defaultLanguage;\n    this.supportedLanguages = supportedLanguages;\n    this.language = '';\n\n    this.translateService.onLangChange\n      .subscribe((event: LangChangeEvent) => { localStorage.setItem(languageKey, event.lang); });\n  }\n\n  /**\n   * Sets the current language.\n   * Note: The current language is saved to the local storage.\n   * If no parameter is specified, the language is loaded from local storage (if present).\n   * @param {string} language The IETF language code to set.\n   */\n  set language(language: string) {\n    language = language || localStorage.getItem(languageKey) || this.translateService.getBrowserCultureLang();\n    let isSupportedLanguage = includes(this.supportedLanguages, language);\n\n    // If no exact match is found, search without the region\n    if (language && !isSupportedLanguage) {\n      language = language.split('-')[0];\n      language = this.supportedLanguages.find(supportedLanguage => supportedLanguage.startsWith(language)) || '';\n      isSupportedLanguage = Boolean(language);\n    }\n\n    // Fallback if language is not supported\n    if (!isSupportedLanguage) {\n      language = this.defaultLanguage;\n    }\n\n    log.debug(`Language set to ${language}`);\n    this.translateService.use(language);\n  }\n\n  /**\n   * Gets the current language.\n   * @return {string} The current language code.\n   */\n  get language(): string {\n    return this.translateService.currentLang;\n  }\n\n  getBrowserCultureLang() {\n    return 'pt-BR';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/i18n.service.ts","export * from './core.module';\nexport * from './authentication/authentication.service';\n// export * from './authentication/authentication.service.mock';\nexport * from './authentication/authentication.guard';\nexport * from './i18n.service';\n/* export * from './http/http.service';\nexport * from './http/http-cache.service';\nexport * from './http/api-prefix.interceptor';\nexport * from './http/cache.interceptor';\nexport * from './http/error-handler.interceptor'; */\nexport * from './route.service';\nexport * from './route-reusable-strategy';\nexport * from './logger.service';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/index.ts","/**\n * Simple logger system with the possibility of registering custom outputs.\n *\n * 4 different log levels are provided, with corresponding methods:\n * - debug   : for debug information\n * - info    : for informative status of the application (success, ...)\n * - warning : for non-critical errors that do not prevent normal application behavior\n * - error   : for critical errors that prevent normal application behavior\n *\n * Example usage:\n * ```\n * import { Logger } from 'app/core/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n * ```\n *\n * To disable debug and info logs in production, add this snippet to your root component:\n * ```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n */\n\n/**\n * The possible log levels.\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\n */\nexport enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) { }\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: Function, level: LogLevel, objects: any[]) {\n    if (level <= Logger.level) {\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\n      func.apply(console, log);\n      Logger.outputs.forEach((output) => output.apply(output, [this.source, level].concat(objects)));\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/logger.service.ts","export class DataModel {\r\n    constructor(\r\n         public id: number\r\n    ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/model/datamodel.ts","import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void { }\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return (future.routeConfig === curr.routeConfig) || future.data.reuse;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/route-reusable-strategy.ts","import { Route as ngRoute, Routes } from '@angular/router';\n\nimport { ShellComponent } from './shell/shell.component';\nimport { AuthenticationGuard } from './authentication/authentication.guard';\n\n/**\n * Provides helper methods to create routes.\n */\nexport class Route {\n\n  /**\n   * Creates routes using the shell component and authentication.\n   * @param routes The routes to add.\n   * @return {Route} The new route using shell as the base.\n   */\n  static withShell(routes: Routes): ngRoute {\n    return {\n      path: '',\n      component: ShellComponent,\n      children: routes,\n      canActivate: [AuthenticationGuard],\n      // Reuse ShellComponent instance when navigating between child views\n      data: { reuse: true }\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/route.service.ts","module.exports = \"<div fxFlex>\\r\\n  <mat-sidenav-container fxFill>\\r\\n    <mat-sidenav #sidenav [mode]=\\\"isMobile ? 'over' : 'side'\\\" [opened]=\\\"!isMobile\\\" [disableClose]=\\\"!isMobile\\\" ngClass.gt-sm=\\\"has-border\\\">\\r\\n      <mat-toolbar>\\r\\n        <!--<span translate>APP_NAME</span>-->\\r\\n        <!-- <img style=\\\"height: 80%;\\\" src=\\\"./assets/unilever.jpg\\\" /> -->\\r\\n        <div fxFlex></div>\\r\\n        <div fxFlex></div>\\r\\n        <div>\\r\\n          <mat-list>\\r\\n            <mat-list-item>\\r\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"userMenu\\\" translate>\\r\\n                <mat-icon>person</mat-icon>\\r\\n\\r\\n              </button>\\r\\n              <b style=\\\"font-size: 6px\\\">{{username}}</b>\\r\\n            </mat-list-item>\\r\\n\\r\\n          </mat-list>\\r\\n\\r\\n\\r\\n          <mat-menu #userMenu=\\\"matMenu\\\">\\r\\n\\r\\n            <button mat-menu-item (click)=\\\"login()\\\" translate>Login</button>\\r\\n            <button mat-menu-item (click)=\\\"logout()\\\" translate>Logout</button>\\r\\n          </mat-menu>\\r\\n        </div>\\r\\n      </mat-toolbar>\\r\\n      <nav>\\r\\n        <mat-list>\\r\\n          <!--<mat-divider></mat-divider>\\r\\n          <a mat-list-item routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" (click)=\\\"isMobile && sidenav.close()\\\">\\r\\n            &nbsp;&nbsp;\\r\\n            <span translate>Home</span>\\r\\n          </a>\\r\\n\\r\\n          <mat-divider></mat-divider>-->\\r\\n          <mat-accordion >\\r\\n\\r\\n            <mat-expansion-panel *ngIf=\\\"username\\\">\\r\\n\\r\\n              <mat-expansion-panel-header>\\r\\n                <span translate>Inquiries</span>\\r\\n              </mat-expansion-panel-header>\\r\\n              <mat-divider></mat-divider>\\r\\n              <a mat-list-item routerLink=\\\"/queryRecord\\\" routerLinkActive=\\\"active\\\" (click)=\\\"sidenav.close()\\\">\\r\\n                <span translate>RecordsConsultation</span>\\r\\n              </a>\\r\\n\\r\\n              <a mat-list-item routerLink=\\\"/processConsulting\\\" routerLinkActive=\\\"active\\\" (click)=\\\"sidenav.close()\\\">\\r\\n                <span translate>ProcessConsulting</span>\\r\\n              </a>\\r\\n\\r\\n              <a mat-list-item routerLink=\\\"/ConsultingSynchronization\\\" routerLinkActive=\\\"active\\\" (click)=\\\"sidenav.close()\\\">\\r\\n                <span translate>Synchronization</span>\\r\\n              </a>\\r\\n\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel *ngIf=\\\"username\\\">\\r\\n\\r\\n              <mat-expansion-panel-header>\\r\\n                <span translate>Register</span>\\r\\n              </mat-expansion-panel-header>\\r\\n\\r\\n              <a mat-list-item routerLink=\\\"/userList\\\" routerLinkActive=\\\"active\\\" (click)=\\\"sidenav.close()\\\">\\r\\n                <span translate>User</span>\\r\\n              </a>\\r\\n              <a mat-list-item routerLink=\\\"/cnpjList\\\" routerLinkActive=\\\"active\\\" (click)=\\\"sidenav.close()\\\">\\r\\n                <span translate>registerCnpj.insert</span>\\r\\n              </a>\\r\\n              \\r\\n\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n\\r\\n            <mat-expansion-panel *ngIf=\\\"username\\\">\\r\\n\\r\\n              <mat-expansion-panel-header>\\r\\n                <span translate>Parameters</span>\\r\\n              </mat-expansion-panel-header>\\r\\n\\r\\n              <a mat-list-item routerLink=\\\"/generic\\\" routerLinkActive=\\\"active\\\" (click)=\\\"sidenav.close()\\\">\\r\\n                <span translate>GenericParameters</span>\\r\\n              </a>\\r\\n\\r\\n              <a mat-list-item routerLink=\\\"/update\\\" routerLinkActive=\\\"active\\\" (click)=\\\"sidenav.close()\\\">\\r\\n                <span translate>UpdateParameters</span>\\r\\n              </a>\\r\\n\\r\\n\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n          </mat-accordion>\\r\\n              <a *ngIf=\\\"!username\\\" mat-list-item (click)=\\\"login()\\\" routerLinkActive=\\\"active\\\">\\r\\n                <span translate>Login</span>\\r\\n              </a>  \\r\\n              <a *ngIf=\\\"username\\\" mat-list-item routerLink=\\\"/userProfile\\\" routerLinkActive=\\\"active\\\" (click)=\\\"sidenav.close()\\\">\\r\\n                <span translate>profile</span>\\r\\n              </a>\\r\\n              &nbsp;&nbsp;<button  *ngIf=\\\"username\\\" mat-menu-item (click)=\\\"logout()\\\" translate>Logout</button>\\r\\n         \\r\\n        </mat-list>\\r\\n      </nav>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <mat-sidenav-content class=\\\"container\\\">\\r\\n\\r\\n      <mat-toolbar>\\r\\n        <button class=\\\"menu-button\\\" mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n          <mat-icon>menu</mat-icon>\\r\\n        </button>\\r\\n        <span>{{title}}</span>\\r\\n\\r\\n      </mat-toolbar>\\r\\n      <div flex layout=\\\"column\\\" layout-align=\\\"center center center center\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </mat-sidenav-content>\\r\\n\\r\\n\\r\\n  </mat-sidenav-container>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/core/shell/shell.component.html\n// module id = ./src/app/core/shell/shell.component.html\n// module chunks = main","module.exports = \"::ng-deep .column {\\n  width: 99%; }\\n\\n::ng-deep .full-width {\\n  width: 99%; }\\n\\n::ng-deep .auto-width {\\n  width: auto; }\\n\\n/* Clear floats after the columns */\\n\\n::ng-deep .row:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both; }\\n\\n::ng-deep .mat-dialog-title {\\n  background-color: #001E64;\\n  color: white;\\n  text-align: center; }\\n\\n::ng-deep .mat-dialog-container {\\n  overflow: hidden !important;\\n  border-radius: 5px !important;\\n  padding: 5px !important;\\n  background-color: #e0e4fa;\\n  height: -webkit-max-content;\\n  height: -moz-max-content;\\n  height: max-content; }\\n\\n::ng-deep .mat-dialog-actions {\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n\\n::ng-deep .mat-dialog-actions .mat-button {\\n    background-color: #001E64;\\n    -webkit-text-fill-color: white;\\n    margin-bottom: 15px; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:disabled(:first-child) {\\n      background-color: #001E64;\\n      -webkit-text-fill-color: black; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:not(:first-child), ::ng-deep .mat-dialog-actions .mat-button :not(:last-child) {\\n      -webkit-text-fill-color: white; }\\n\\n::ng-deep .flex-spacer {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto; }\\n\\n::ng-deep .mat-form-field {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-checkbox {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-radio-group {\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column; }\\n\\n::ng-deep .mat-radio-button {\\n  margin: 5px; }\\n\\n.selected-value {\\n  margin: 15px 0; }\\n\\n::ng-deep .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .span-label {\\n  font-size: 8px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-focused .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline .mat-form-field-ripple {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-button, .mat-raised-button {\\n  background-color: #001E64;\\n  -webkit-text-decoration-color: white;\\n          text-decoration-color: white; }\\n\\n::ng-deep .mat-success {\\n  background-color: #001E64;\\n  color: black; }\\n\\n::ng-deep .mat-button-focus {\\n  background-color: #001E64;\\n  color: black; }\\n\\n:host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1; }\\n\\n.mat-sidenav-container {\\n  background-color: inherit;\\n  -webkit-text-fill-color: inherit; }\\n\\n.mat-sidenav {\\n  font-weight: bold;\\n  -webkit-text-fill-color: #001E64;\\n  min-width: 270px;\\n  max-width: 28%;\\n  background-color: #e0e4fa; }\\n\\n.mat-accordion .mat-expansion-panel .mat-expansion-panel-header {\\n  font-weight: bold;\\n  background-color: #e0e4fa;\\n  -webkit-text-fill-color: #001E64; }\\n\\n.has-border {\\n  border-right: 4px solid rgba(0, 0, 0, 0.12); }\\n\\n.mat-list {\\n  padding-top: 0;\\n  background-color: inherit;\\n  -webkit-text-fill-color: inherit; }\\n\\n.mat-list-item {\\n  text-decoration: none;\\n  -webkit-text-fill-color: inherit;\\n  font-weight: bold; }\\n\\n.mat-list-item:hover {\\n    background: rgba(0, 0, 0, 0.15); }\\n\\n.menu-button {\\n  margin-right: 1rem; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/core/shell/shell.component.scss\n// module id = ./src/app/core/shell/shell.component.scss\n// module chunks = main","import { Title } from '@angular/platform-browser';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ObservableMedia } from '@angular/flex-layout';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { I18nService } from '../i18n.service';\nimport { registerLocaleData } from '@angular/common';\nimport localePt from '@angular/common/locales/pt';\nimport localeEn from '@angular/common/locales/en';\nimport { GenericParameter } from '@app/generic-parameter/generic-parameter.model';\nimport { GenericParameterService } from '@app/generic-parameter/generic-parameter.service';\n\n\n\n@Component({\n  selector: 'app-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.scss']\n})\nexport class ShellComponent implements OnInit {\n\n  genericParameter : GenericParameter = new GenericParameter();\n  constructor(private router: Router,\n              private titleService: Title,\n              private media: ObservableMedia,\n              private genericParameterService: GenericParameterService,\n              private authenticationService: AuthenticationService,\n              private i18nService: I18nService) { }\n\n  ngOnInit() { \n    this.genericParameterService.load().subscribe(data => {\n      this.genericParameter = data;\n      this.titleService.setTitle(this.genericParameter.systemName);\n    })\n  }\n\n  setLanguage(language: string) {\n    if (language=='pt-BR') {\n      registerLocaleData(localePt);\n    } else if (language=='en-US') {\n      registerLocaleData(localeEn);\n    }\n    this.i18nService.language = language;\n  }\n\n  logout() {\n    this.authenticationService.logout()\n      .subscribe(() => this.router.navigate(['/login'], { replaceUrl: true }));\n  }\n\n  get username(): string | null {\n    const credentials = this.authenticationService.credentials;\n    return credentials ? credentials.username : null;\n  }\n\n  get languages(): string[] {\n    return this.i18nService.supportedLanguages;\n  }\n\n  get isMobile(): boolean {\n    return this.media.isActive('xs') || this.media.isActive('sm');\n  }\n\n  get title(): string {\n    return this.titleService.getTitle();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/shell/shell.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","module.exports = \".container {\\n  text-align: center;\\n  padding: 1rem;\\n  background-color: #004200;\\n  color: #004200;\\n  border-color: black;\\n  font-stretch: expanded;\\n  -webkit-text-fill-color: black; }\\n\\n.mat-icon {\\n  vertical-align: middle; }\\n\\n.fc-sun {\\n  color: #337ab7;\\n  border-color: black;\\n  background-color: #ffa58c; }\\n\\n.fc-day:nth-child(even) {\\n  background-color: #99C4EE;\\n  font-weight: bold;\\n  -webkit-text-fill-color: black; }\\n\\n.fc-day:nth-child(odd) {\\n  background-color: #AAD4FF;\\n  font-weight: bold;\\n  -webkit-text-fill-color: black; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.scss\n// module id = ./src/app/dashboard/dashboard.component.scss\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CalendarComponent } from 'ng-fullcalendar';\nimport { Options } from 'fullcalendar';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashBoardComponent implements OnInit {\n  calendarOptions: Options;\n  \n  @ViewChild(CalendarComponent) ucCalendar: CalendarComponent;\n  \n  constructor() {}\n  ngOnInit() {\n    const dateObj = new Date();\n    const yearMonth = dateObj.getUTCFullYear() + '-' + (dateObj.getUTCMonth() + 1);\n     this.calendarOptions = {\n        editable: true,\n        eventLimit: false,\n        height: 'auto',\n        locale:'pt-BR',\n        buttonText: {\n          prev:     'Anterior',\n          next:     'Proximo',\n          prevYear: 'Ano Anterior',\n          nextYear: 'Proximo Ano',\n          today:    'Hoje',\n          month:    'Mês',\n          week:     'Semana',\n          day:      'Dia'\n        },\n        header: {\n          left: 'prev,next,today',\n          center: 'title',\n          right: 'prevYear,nextYear'\n        },\n        events: [{\n          title: 'All Day Event',\n          start: yearMonth + '-01'\n      },\n      {\n          title: 'Long Event',\n          start: yearMonth + '-07',\n          end: yearMonth + '-10'\n      },\n      {\n          id: 999,\n          title: 'Repeating Event',\n          start: yearMonth + '-09T16:00:00'\n      },\n      {\n          id: 999,\n          title: 'Repeating Event',\n          start: yearMonth + '-16T16:00:00'\n      },\n      {\n          title: 'Conference',\n          start: yearMonth + '-11',\n          end: yearMonth + '-13'\n      },\n      {\n          title: 'Meeting',\n          start: yearMonth + '-12T10:30:00',\n          end: yearMonth + '-12T12:30:00'\n      },\n      {\n          title: 'Lunch',\n          start: yearMonth + '-12T12:00:00'\n      },\n      {\n          title: 'Meeting',\n          start: yearMonth + '-12T14:30:00'\n      },\n      {\n          title: 'Happy Hour',\n          start: yearMonth + '-12T17:30:00'\n      },\n      {\n          title: 'Dinner',\n          start: yearMonth + '-12T20:00:00'\n      },\n      {\n          title: 'Birthday Party',\n          start: yearMonth + '-13T07:00:00'\n      },\n      {\n          title: 'Click for Google',\n          url: 'http://google.com/',\n          start: yearMonth + '-28'\n      }] \n      };\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FullCalendarModule } from 'ng-fullcalendar';\n\nimport { DashBoardComponent } from '@app/dashboard/dashboard.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FullCalendarModule\n  ],\n  declarations: [DashBoardComponent],\n  exports: [DashBoardComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DashboardModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.module.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Route, extract } from '@app/core';\nimport { GenericParameterComponent } from '@app/generic-parameter/generic-parameter.component';\n\nconst routes: Routes = [\n  Route.withShell([\n    { path: 'generic', component: GenericParameterComponent, data: { title: extract('GenericParameter') } }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GenericParameterRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/generic-parameter/generic-parameter-routing.module.ts","module.exports = \"<div style=\\\"height: max-content;\\\" class=\\\"table-container mat-elevation-z8\\\">\\n  <mat-card class=\\\"param-container\\\">\\n\\n    <mat-card-content >\\n\\n      <form  (ngSubmit)=\\\"submit\\\" [formGroup]=\\\"form\\\">\\n        \\n        <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"center\\\" layout-wrap>\\n        \\n          <mat-form-field class=\\\"version\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.version' | translate }}\\\" formControlName=\\\"version\\\"\\n              [(ngModel)]=\\\"data.version\\\">\\n            <mat-error *ngIf=\\\"form.controls.version.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"systemName\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.systemName' | translate }}\\\" formControlName=\\\"systemName\\\"\\n              [(ngModel)]=\\\"data.systemName\\\">\\n            <mat-error *ngIf=\\\"form.controls.systemName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n        \\n        </section>  \\n        \\n        <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-between center\\\" layout-wrap>  \\n          <mat-form-field class=\\\"cnpj\\\">\\n                <input matInput #input class=\\\"form-control\\\" [textMask]=\\\"{mask: cnpjMask , guide: false, modelClean: true}\\\"  type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.cnpj' | translate }}\\\" formControlName=\\\"cnpj\\\"\\n                  [(ngModel)]=\\\"data.cnpj\\\">\\n                <mat-error *ngIf=\\\"form.controls.cnpj.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"socialName\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.socialName' | translate }}\\\" formControlName=\\\"socialName\\\"\\n              [(ngModel)]=\\\"data.socialName\\\">\\n            <mat-error *ngIf=\\\"form.controls.socialName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n        \\n        </section>  \\n        \\n        <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-between center\\\" layout-wrap>\\n        \\n          <mat-form-field class=\\\"codeZip\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.codeZip' | translate }}\\\" formControlName=\\\"codeZip\\\"\\n              [(ngModel)]=\\\"data.codeZip\\\">\\n            <mat-error *ngIf=\\\"form.controls.codeZip.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"address\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.address' | translate }}\\\" formControlName=\\\"address\\\"\\n              [(ngModel)]=\\\"data.address\\\">\\n            <mat-error *ngIf=\\\"form.controls.address.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"number\\\">\\n              <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.number' | translate }}\\\" formControlName=\\\"number\\\"\\n                [(ngModel)]=\\\"data.number\\\">\\n              \\n            </mat-form-field>\\n        \\n          <mat-form-field class=\\\"neighborhood\\\">\\n              <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.neighborhood' | translate }}\\\" formControlName=\\\"neighborhood\\\"\\n                [(ngModel)]=\\\"data.neighborhood\\\">\\n              <mat-error *ngIf=\\\"form.controls.neighborhood.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n      </section>  \\n        \\n      <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-between center\\\" layout-wrap>\\n\\n          <mat-form-field class=\\\"city\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.city' | translate }}\\\" formControlName=\\\"city\\\"\\n              [(ngModel)]=\\\"data.city\\\">\\n            <mat-error *ngIf=\\\"form.controls.city.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"state\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.state' | translate }}\\\" formControlName=\\\"state\\\"\\n              [(ngModel)]=\\\"data.state\\\">\\n            <mat-error *ngIf=\\\"form.controls.state.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"emailClient\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.emailClient' | translate }}\\\" formControlName=\\\"emailClient\\\"\\n              [(ngModel)]=\\\"data.emailClient\\\">\\n            <mat-error *ngIf=\\\"form.controls.emailClient.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n          \\n          <mat-form-field class=\\\"responsiblePerson\\\">\\n              <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.responsiblePerson' | translate }}\\\"\\n                formControlName=\\\"responsiblePerson\\\" [(ngModel)]=\\\"data.responsiblePerson\\\">\\n              <mat-error *ngIf=\\\"form.controls.responsiblePerson.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n            </mat-form-field>\\n      </section>  \\n        \\n      <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-between center\\\" layout-wrap>\\n      \\n          <mat-form-field class=\\\"emailReponsible\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.emailReponsible' | translate }}\\\"\\n              formControlName=\\\"emailReponsible\\\" [(ngModel)]=\\\"data.emailReponsible\\\">\\n            <mat-error *ngIf=\\\"form.controls.emailReponsible.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"emailDefault\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.emailDefault' | translate }}\\\" formControlName=\\\"emailDefault\\\"\\n              [(ngModel)]=\\\"data.emailDefault\\\">\\n            <mat-error *ngIf=\\\"form.controls.emailDefault.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n        </section>\\n      </form>\\n      <mat-dialog-actions class=\\\"mat-dialog-actions-params\\\"> \\n          <button style=\\\"align-content: center center\\\" class=\\\"mat-raised-button\\\" mat-button [type]=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" \\n            (click)=\\\"save()\\\" translate>{{ 'save' | translate }}</button>\\n          <button class=\\\"mat-raised-button\\\" mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">{{ 'cancel' | translate }}</button>\\n      </mat-dialog-actions>\\n    </mat-card-content>\\n    \\n  </mat-card>\\n\\n</div>\\n\\n\\n    \\n      \\n      \\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/generic-parameter/generic-parameter.component.html\n// module id = ./src/app/generic-parameter/generic-parameter.component.html\n// module chunks = main","module.exports = \"::ng-deep .column {\\n  width: 99%; }\\n\\n::ng-deep .full-width {\\n  width: 99%; }\\n\\n::ng-deep .auto-width {\\n  width: auto; }\\n\\n/* Clear floats after the columns */\\n\\n::ng-deep .row:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both; }\\n\\n::ng-deep .mat-dialog-title {\\n  background-color: #001E64;\\n  color: white;\\n  text-align: center; }\\n\\n::ng-deep .mat-dialog-container {\\n  overflow: hidden !important;\\n  border-radius: 5px !important;\\n  padding: 5px !important;\\n  background-color: #e0e4fa;\\n  height: -webkit-max-content;\\n  height: -moz-max-content;\\n  height: max-content; }\\n\\n::ng-deep .mat-dialog-actions {\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n\\n::ng-deep .mat-dialog-actions .mat-button {\\n    background-color: #001E64;\\n    -webkit-text-fill-color: white;\\n    margin-bottom: 15px; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:disabled(:first-child) {\\n      background-color: #001E64;\\n      -webkit-text-fill-color: black; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:not(:first-child), ::ng-deep .mat-dialog-actions .mat-button :not(:last-child) {\\n      -webkit-text-fill-color: white; }\\n\\n::ng-deep .flex-spacer {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto; }\\n\\n::ng-deep .mat-form-field {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-checkbox {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-radio-group {\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column; }\\n\\n::ng-deep .mat-radio-button {\\n  margin: 5px; }\\n\\n.selected-value {\\n  margin: 15px 0; }\\n\\n::ng-deep .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .span-label {\\n  font-size: 8px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-focused .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline .mat-form-field-ripple {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-button, .mat-raised-button {\\n  background-color: #001E64;\\n  -webkit-text-decoration-color: white;\\n          text-decoration-color: white; }\\n\\n::ng-deep .mat-success {\\n  background-color: #001E64;\\n  color: black; }\\n\\n::ng-deep .mat-button-focus {\\n  background-color: #001E64;\\n  color: black; }\\n\\n.param-container {\\n  background-color: #e0e4fa; }\\n\\n.version {\\n  width: 20%; }\\n\\n.systemName {\\n  width: 40%; }\\n\\n.cnpj {\\n  width: 20%; }\\n\\n.socialName {\\n  width: 40%; }\\n\\n.codeZip {\\n  width: 20%; }\\n\\n.address {\\n  width: 40%; }\\n\\n.number {\\n  width: 10%; }\\n\\n.neighborhood {\\n  width: 20%; }\\n\\n.city {\\n  width: 20%; }\\n\\n.state {\\n  width: 5%; }\\n\\n.emailClient {\\n  width: 34%; }\\n\\n.responsiblePerson {\\n  width: 30%; }\\n\\n.emailReponsible {\\n  width: 45%; }\\n\\n.emailDefault {\\n  width: 46%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/generic-parameter/generic-parameter.component.scss\n// module id = ./src/app/generic-parameter/generic-parameter.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { GenericParameter } from '@app/generic-parameter/generic-parameter.model';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { I18nService } from '@app/core';\r\nimport { GenericParameterService } from '@app/generic-parameter/generic-parameter.service';\r\nimport { Router, RouterState } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-generic-parameter',\r\n  templateUrl: './generic-parameter.component.html',\r\n  styleUrls: ['./generic-parameter.component.scss']\r\n})\r\nexport class GenericParameterComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  data: GenericParameter = new GenericParameter();\r\n  public cnpjMask = [ /\\d/ , /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/ , /\\d/, /\\d/, '/', /\\d/, /\\d/,/\\d/, /\\d/, '-', /\\d/, /\\d/,];\r\n  constructor(private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    public genericParameterService : GenericParameterService,\r\n    public i18n: I18nService) { }\r\n\r\n  ngOnInit() {\r\n    this.genericParameterService.load().subscribe(data => {\r\n      this.data = data;\r\n    },err  => {\r\n      this.data = new GenericParameter();\r\n    });\r\n\r\n    this.form = this.formBuilder.group({\r\n      version: new FormControl('', [Validators.required]),\r\n      systemName: new FormControl('', [Validators.required]),\r\n      socialName: new FormControl('', [Validators.required]),\r\n      cnpj: new FormControl('', [Validators.required]),\r\n      codeZip: new FormControl('', [Validators.required]),\r\n      address: new FormControl('', [Validators.required]),\r\n      number: new FormControl('', [Validators.required]),\r\n      neighborhood: new FormControl('', [Validators.required]),\r\n      city: new FormControl('', [Validators.required]),\r\n      state: new FormControl('', [Validators.required]),\r\n      emailClient: new FormControl('', [Validators.required]),\r\n      responsiblePerson:new FormControl('', [Validators.required]),\r\n      emailReponsible: new FormControl('', [Validators.required]),\r\n      emailDefault: new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n\r\n  getErrorMessage() {\r\n\r\n    return this.form.controls.version.hasError('required') ? 'fieldEmpty' :\r\n    this.form.controls.systemName.hasError('required') ? 'fieldEmpty' :\r\n    this.form.controls.socialName.hasError('required') ? 'fieldEmpty' :\r\n    this.form.controls.cnpj.hasError('required') ? 'fieldEmpty' :\r\n    this.form.controls.codeZip.hasError('required') ? 'fieldEmpty' :\r\n    this.form.controls.address.hasError('required') ? 'fieldEmpty' :\r\n    this.form.controls.neighborhood.hasError('required') ? 'fieldEmpty' :\r\n    this.form.controls.city.hasError('required') ? 'fieldEmpty' :\r\n    this.form.controls.emailClient.hasError('required') ? 'fieldEmpty' :\r\n    this.form.controls.responsiblePerson.hasError('required') ? 'fieldEmpty' :\r\n    this.form.controls.emailReponsible.hasError('required') ? 'fieldEmpty' :\r\n    this.form.controls.emailDefault.hasError('required') ? 'fieldEmpty' :\r\n    '';\r\n  }\r\n\r\n  save(){\r\n    this.data.version     = this.form.controls[\"version\"].value;\r\n    this.data.systemName\t= this.form.controls[\"systemName\"].value;\r\n    this.data.socialName\t= this.form.controls[\"socialName\"].value;\r\n    this.data.cnpj\t\t    = this.form.controls[\"cnpj\"].value;\r\n    this.data.cnpj        = this.data.cnpj.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\r\n    this.data.codeZip\t\t  = this.form.controls[\"codeZip\"].value;\r\n    this.data.codeZip\t\t  = this.data.codeZip.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\r\n    this.data.address\t\t  = this.form.controls[\"address\"].value;\r\n    this.data.number\t\t  = this.form.controls[\"number\"].value;\r\n    this.data.neighborhood\t= this.form.controls[\"neighborhood\"].value;\r\n    this.data.city\t\t      = this.form.controls[\"city\"].value;\r\n    this.data.state\t\t      = this.form.controls[\"state\"].value;\r\n    this.data.emailClient\t  = this.form.controls[\"emailClient\"].value;\r\n    this.data.responsiblePerson = this.form.controls[\"responsiblePerson\"].value;\t\r\n    this.data.emailReponsible\t  = this.form.controls[\"emailReponsible\"].value;\r\n    this.data.emailDefault\t    = this.form.controls[\"emailDefault\"].value;\r\n  /*   this.data.updateUser\t      = this.form.controls[\"updateUser\"].value;\r\n    this.data.updateDate\t      = this.form.controls[\"updateUser\"].value; */\r\n\r\n    this.genericParameterService.save(this.data);\r\n  }\r\n\r\n  onNoClick() {\r\n    this.router.navigate(['/'], { replaceUrl: true });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/generic-parameter/generic-parameter.component.ts","import { DataModel } from \"@app/core/model/datamodel\";\r\nimport { User } from \"@app/user/user-model\";\r\n\r\nexport class GenericParameter {\r\n     id: number;\r\n     version:string;\r\n     systemName:string;\r\n     socialName: string;\r\n     cnpj:String;\r\n     codeZip: String;\r\n     address: string;\r\n     number: string;\r\n     neighborhood: string;\r\n     city: string;\r\n     state: string;\r\n     emailClient: string;\r\n     responsiblePerson: string;\r\n     emailReponsible: string;\r\n     emailDefault: string;\r\n     updateUser:User;\r\n     updateDate:Date;\r\n    //constructor() \r\n    /*constructor(id: number,\r\n        version:string,\r\n        systemName:string,\r\n        socialName: string,\r\n        cnpj:number,\r\n        codeZip: number,\r\n        address: string,\r\n        city: string,\r\n        state: string,\r\n        emailClient: string,\r\n        responsiblePerson: string,\r\n        emailReponsible: string,\r\n        emailDefault: string,\r\n        contactPerson: string,\r\n        emailSuport: string,\r\n        phoneSuport: string,\r\n        updateUser:User,\r\n        updateDate:Date){\r\n        super(id)\r\n        this.id = id;\r\n        this.version = version;\r\n        this.systemName = systemName;\r\n        this.socialName = socialName;\r\n        this.cnpj       = cnpj;\r\n        this.codeZip    = codeZip;\r\n        this.address    = address;\r\n        this.city       = city;\r\n        this.state      = state;\r\n        this.emailClient= emailClient;\r\n        this.responsiblePerson = responsiblePerson; \r\n        this.emailReponsible   = emailReponsible;\r\n        this.emailDefault      = emailDefault;\r\n        this.contactPerson     = contactPerson;\r\n        this.emailSuport       = emailSuport;\r\n        this.phoneSuport       = phoneSuport;\r\n        this.updateUser        = updateUser;\r\n        this.updateDate        = updateDate;\r\n    }*/\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/generic-parameter/generic-parameter.model.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { GenericParameterRoutingModule } from './generic-parameter-routing.module';\nimport { GenericParameterComponent } from './generic-parameter.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreModule } from '@app/core';\nimport { SharedModule } from '@app/shared';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from '@app/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GenericParameter } from '@app/generic-parameter/generic-parameter.model';\nimport { GenericParameterService } from '@app/generic-parameter/generic-parameter.service';\nimport { TextMaskModule } from 'angular2-text-mask';\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    CoreModule,\n    SharedModule,\n    FlexLayoutModule,\n    MaterialModule,\n    TextMaskModule,\n    GenericParameterRoutingModule\n  ],\n  providers:[GenericParameterService],\n  declarations: [GenericParameterComponent]\n})\nexport class GenericParameterModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/generic-parameter/generic-parameter.module.ts","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport {User} from '../user/user-model';\r\nimport {HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Headers, Http } from '@angular/http';\r\n \r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Alert, error } from 'selenium-webdriver';\r\nimport { environment } from '@env/environment';\r\nimport { GenericParameter } from '@app/generic-parameter/generic-parameter.model';\r\n\r\n\r\n@Injectable()\r\nexport class GenericParameterService {\r\n  private readonly API_URL = '/genericparameter';\r\n  \r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n  constructor (private httpClient: HttpClient) {\r\n     \r\n  }\r\n\r\n  load(): Observable<GenericParameter> {\r\n    \r\n    return this.httpClient.get(this.API_URL+'/load/')\r\n    .map(response => response)\r\n    .catch(error=> Observable.throw(error.message));\r\n    \r\n  }\r\n\r\n \r\n  // DEMO ONLY, you can find working methods below\r\n  save (genericParameter: GenericParameter): void {\r\n    //this.dialogData = user;\r\n    console.log(JSON.stringify(genericParameter));\r\n\r\n    this.httpClient.post(this.API_URL+'/save', genericParameter).subscribe(data => {\r\n      //this.dialogData = user;\r\n      \r\n      alert('Successfully save');\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        alert('Error occurred. Details: ' + err.name + ' ' + err.message);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n/* REAL LIFE CRUD Methods I've used in my projects. ToasterService uses Material Toasts for displaying messages:\r\n    // ADD, POST METHOD\r\n    addItem(kanbanItem: KanbanItem): void {\r\n    this.httpClient.post(this.API_URL, kanbanItem).subscribe(data => {\r\n      this.dialogData = kanbanItem;\r\n      this.toasterService.showToaster('Successfully added', 3000);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n      this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\r\n    });\r\n   }\r\n    // UPDATE, PUT METHOD\r\n     updateItem(kanbanItem: KanbanItem): void {\r\n    this.httpClient.put(this.API_URL + kanbanItem.id, kanbanItem).subscribe(data => {\r\n        this.dialogData = kanbanItem;\r\n        this.toasterService.showToaster('Successfully edited', 3000);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\r\n      }\r\n    );\r\n  }\r\n  // DELETE METHOD\r\n  deleteItem(id: number): void {\r\n    this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(data['']);\r\n        this.toasterService.showToaster('Successfully deleted', 3000);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\r\n      }\r\n    );\r\n  }\r\n*/\n\n\n// WEBPACK FOOTER //\n// ./src/app/generic-parameter/generic-parameter.service.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\n\nimport { Route, extract, I18nService } from '@app/core';\nimport { HomeComponent } from './home.component';\nimport { GenericParameter } from '@app/generic-parameter/generic-parameter.model';\nimport { GenericParameterService } from '@app/generic-parameter/generic-parameter.service';\nimport { Title } from '@angular/platform-browser';\n\nconst routes: Routes = [\n  Route.withShell([\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent, data: { title: extract('Home') } }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class HomeRoutingModule { \n  \n  genericParameter : GenericParameter = new GenericParameter();\n\n  constructor(private router: Router,\n    public genericParameterService : GenericParameterService,\n    private titleService: Title,\n    public i18n: I18nService) { }\n   \ngetTitle() : string {\n  this.genericParameterService.load().subscribe(data => {\n    this.genericParameter = data;\n    this.titleService.setTitle(this.genericParameter.systemName);\n    return this.titleService.getTitle()\n  })\n  return null;\n}\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home-routing.module.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n            <mat-card>\\r\\n\\r\\n              <mat-card-content>\\r\\n                        <app-dashboard></app-dashboard>\\r\\n              </mat-card-content>\\r\\n            </mat-card>\\r\\n          </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","module.exports = \"@charset \\\"UTF-8\\\";\\n.container {\\n  text-align: center;\\n  padding: 1em; }\\n.logo {\\n  width: 150px;\\n  margin: 0 auto; }\\nq {\\n  font-style: italic;\\n  quotes: \\\"« \\\" \\\" »\\\"; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.scss\n// module id = ./src/app/home/home.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { QuoteService } from './quote.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  quote: string;\r\n  isLoading: boolean;\r\n\r\n  constructor(private quoteService: QuoteService) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n   /*  this.quoteService.getRandomQuote({ category: 'dev' })\r\n      .pipe(finalize(() => { this.isLoading = false; }))\r\n      .subscribe((quote: string) => { this.quote = quote; }); */\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { CoreModule } from '@app/core';\r\nimport { SharedModule } from '@app/shared';\r\nimport { MaterialModule } from '@app/material.module';\r\nimport { HomeRoutingModule } from './home-routing.module';\r\nimport { HomeComponent } from './home.component';\r\nimport { QuoteService } from './quote.service';\r\nimport { DashboardModule } from '../dashboard/dashboard.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    FlexLayoutModule,\r\n    MaterialModule,\r\n    HomeRoutingModule,\r\n    DashboardModule\r\n  ],\r\n  declarations: [\r\n    HomeComponent\r\n  ],\r\n  schemas:[CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [\r\n    QuoteService\r\n  ]\r\n})\r\nexport class HomeModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { map, catchError } from 'rxjs/operators';\n\nconst routes = {\n  quote: (c: RandomQuoteContext) => `/jokes/random?category=${c.category}`\n};\n\nexport interface RandomQuoteContext {\n  // The quote's category: 'dev', 'explicit'...\n  category: string;\n}\n\n@Injectable()\nexport class QuoteService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getRandomQuote(context: RandomQuoteContext): Observable<string> {\n    return this.httpClient\n      .cache()\n      .get(routes.quote(context))\n      .pipe(\n        map((body: any) => body.value),\n        catchError(() => of('Error, could not load joke :-('))\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/quote.service.ts","module.exports = \"<h2 mat-dialog-title>{{ 'lostpassword' | translate }}</h2>\\n\\n<mat-dialog-content>\\n  \\n    \\n      <span class=\\\"span-label\\\"> Será enviado email para {{data.email}} com link para redefinir a senha.</span>\\n    \\n\\n \\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n    <button class=\\\"mat-raised-button mat-primary\\\" mat-button (click)=\\\"send()\\\" translate>{{ 'send' | translate }}</button>\\n    <button class=\\\"mat-raised-button\\\" mat-button (click)=\\\"onNoClick()\\\" translate>{{ 'cancel' | translate }}</button>\\n</mat-dialog-actions>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/forgot-password-component/forgot-password-component.html\n// module id = ./src/app/login/forgot-password-component/forgot-password-component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { LoginService } from '@app/login/login.service';\nimport { I18nService } from '@app/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '@app/user/user-model';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password-component.html'\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ForgotPasswordComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: User,\n              private route: ActivatedRoute,\n              public dataService: LoginService,\n              public i18n: I18nService) { }\n\n  ngOnInit() {\n\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public send(): void {\n    this.dataService.sendForgotPassword(this.data['email']);\n    this.dialogRef.close();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/forgot-password-component/forgot-password-component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { extract } from '@app/core';\nimport { LoginComponent } from './login.component';\nimport { RedefinePasswordComponent } from '@app/login/redefine-password/redefine-password.component';\nimport { RegisterComponent } from '@app/login/register-user/register.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent, data: { title: extract('Login') }},\n  { path: 'redefine', component: RedefinePasswordComponent, data: { title: extract('Redefine') }},\n  { path: 'registerUser', component: RegisterComponent, data: { title: extract('registerUser') } \n}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule],\n  providers: []\n})\nexport class LoginRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login-routing.module.ts","module.exports = \"<div class=\\\"login-container\\\">\\r\\n  <div class=\\\"login-title\\\">\\r\\n\\r\\n    <!--<p fxLayoutAlign=\\\"center center\\\" translate> APP_NAME </p>-->\\r\\n    <!-- <img style=\\\"height: 50%;\\\" src=\\\"./assets/unilever.jpg\\\" /> -->\\r\\n  </div>\\r\\n  <div class=\\\"mat-dialog-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n\\r\\n    <mat-card fxFlex=\\\"90%\\\" fxFlex.sm=\\\"66%\\\" fxFlex.md=\\\"50%\\\" fxFlex.gt-md=\\\"33%\\\" class=\\\"login-box\\\">\\r\\n      <h2 mat-dialog-title translate>login</h2>\\r\\n\\r\\n      <form (ngSubmit)=\\\"login()\\\" [formGroup]=\\\"loginForm\\\" novalidate>\\r\\n        <div class=\\\"login-error\\\" [hidden]=\\\"!error || isLoading\\\" translate>\\r\\n          Username or password incorrect.\\r\\n        </div>\\r\\n        <br/>\\r\\n        \\r\\n        <div fxLayout=\\\"column\\\">\\r\\n\\r\\n          <mat-form-field>\\r\\n            <input type=\\\"text\\\" matInput formControlName=\\\"username\\\" autocomplete=\\\"username\\\" [placeholder]=\\\"'Username' | translate\\\" />\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.username.valid || loginForm.controls.username.untouched\\\">\\r\\n              <span translate>Username is required</span>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n\\r\\n          <mat-form-field>\\r\\n            <input type=\\\"password\\\" matInput formControlName=\\\"password\\\" autocomplete=\\\"current-password\\\" [placeholder]=\\\"'Password' | translate\\\"\\r\\n              required/>\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.password.valid || loginForm.controls.password.untouched\\\">\\r\\n              <span translate>Password is required</span>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"remember\\\" translate>Remember me</mat-slide-toggle>\\r\\n          <br/>\\r\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid || isLoading\\\">\\r\\n            <app-loader class=\\\"inline-loader\\\" [isLoading]=\\\"isLoading\\\"></app-loader>\\r\\n            <span translate>Login</span>\\r\\n          </button>\\r\\n          <br/>\\r\\n          <a style=\\\"text-align: right\\\" routerLink=\\\"\\\" routerLinkActive=\\\"active\\\" (click)=\\\"sendEmail()\\\">\\r\\n            <span class=\\\"span-label\\\" translate>lostpassword</span>\\r\\n          </a>\\r\\n          <a style=\\\"text-align: right\\\" routerLink=\\\"/registerUser\\\" routerLinkActive=\\\"active\\\">\\r\\n              <span class=\\\"span-label\\\" translate>RegisterUser</span>\\r\\n          </a>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","module.exports = \"/*\\n * Application global variables.\\n */\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  background-color: #e0e4fa; }\\n.inline-loader {\\n  display: inline-block; }\\n.version {\\n  margin: 0; }\\n.login-box {\\n  width: auto;\\n  height: -webkit-max-content;\\n  height: -moz-max-content;\\n  height: max-content;\\n  border-radius: 5px !important;\\n  background-color: #e0e4fa; }\\n::ng-deep .mat-dialog-title {\\n  background-color: #001E64;\\n  color: white;\\n  text-align: center; }\\n::ng-deep .mat-dialog-container {\\n  overflow: hidden !important;\\n  padding: 10px !important;\\n  background-color: #e0e4fa;\\n  border-color: black;\\n  border-width: 5px;\\n  width: auto;\\n  height: 80%; }\\n.login-title {\\n  color: white;\\n  background-color: #001E64;\\n  width: 100%;\\n  height: auto; }\\n.body {\\n  width: 100%; }\\n.title {\\n  margin-top: 10%; }\\n.login-container {\\n  background-color: #001E64;\\n  width: 100%; }\\n.mat-form-field {\\n  width: 100%; }\\n.login-error {\\n  color: #f44336; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.scss\n// module id = ./src/app/login/login.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger, I18nService, AuthenticationService } from '@app/core';\nimport { MatDialog } from '@angular/material';\nimport { ForgotPasswordComponent } from '@app/login/forgot-password-component/forgot-password-component';\nimport { LoginService } from '@app/login/login.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nconst log = new Logger('Login');\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  version: string = environment.version;\n  error: string;\n  loginForm: FormGroup;\n  isLoading = false;\n  email: string;\n  constructor(private router: Router,\n              private dialog: MatDialog,\n              private formBuilder: FormBuilder,\n              private i18nService: I18nService,\n              private loginService: LoginService,\n              private authenticationService: AuthenticationService) {\n    this.createForm();\n  }\n\n  ngOnInit() { }\n\n  login() {\n    /*this.isLoading = true;\n    let userName = this.loginForm.controls[\"username\"];\n    let password = this.loginForm.controls[\"password\"];\n    this.loginService.login(userName.value,password.value).subscribe(){data => \n      this.authenticationService.credentials()\n    }*/\n\n    this.authenticationService.login(this.loginForm.value)\n      .pipe(finalize(() => {\n        this.loginForm.markAsPristine();\n        this.isLoading = false;\n      }))\n      .subscribe(credentials => {\n        log.debug(`${credentials.username} successfully logged in`);\n        this.router.navigate(['/'], { replaceUrl: true });\n      },err  => {\n        log.debug(`Login error: ${err}`);\n        this.error = err.error;\n      });\n\n\n  }\n\n  forgotPassword() {\n    this.authenticationService.getEmail(this.loginForm.value)\n    .subscribe(\n      data => {\n        this.email = data['email'];\n      },\n      error => {\n        this.error = error;\n        alert(error); \n      });\n  }\n\n  sendEmail() {\n    this.forgotPassword();\n    if (this.email) {\n      const dialogRef = this.dialog.open(ForgotPasswordComponent, {data: {email: this.email},\n        height: '200px',\n        width: '400px'\n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n        if (result === 1) {\n          // After dialog is closed we're doing frontend updates\n          // For add we're just pushing a new row inside DataService\n          // this.dataSource.dataChange.value.push(this.dataService.getDialogData());\n          //this.refreshTable();\n\n        }\n      });\n\n    }\n  }\n\n  setLanguage(language: string) {\n    this.i18nService.language = language;\n  }\n\n  get currentLanguage(): string {\n    return this.i18nService.language;\n  }\n\n  get languages(): string[] {\n    return this.i18nService.supportedLanguages;\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      remember: true\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","export class Login  {\r\n     userName:string;\r\n     password:string;\r\n     email:string;\r\n   \r\n     constructor(userName:string,\r\n         password:string,\r\n         email: string){\r\n        this.userName = userName;\r\n        this.password = password;\r\n        this.email    = email;\r\n     }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.model.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { SharedModule } from '@app/shared';\nimport { MaterialModule } from '@app/material.module';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { LoginService }  from './login.service';\nimport { ForgotPasswordComponent } from './forgot-password-component/forgot-password-component';\nimport { RedefinePasswordComponent } from './redefine-password/redefine-password.component'\nimport { RegisterComponent } from '@app/login/register-user/register.component';\nimport { RegisterService } from '@app/login/register-user/register.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    SharedModule,\n    FlexLayoutModule,\n    MaterialModule,\n    LoginRoutingModule\n  ],\n  providers:[LoginService,RegisterService],\n  declarations: [\n    LoginComponent,\n    ForgotPasswordComponent,\n    RedefinePasswordComponent,\n    RegisterComponent\n  ],\n  entryComponents:[ForgotPasswordComponent]\n})\nexport class LoginModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.module.ts","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {User} from '../user/user-model';\nimport {HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\n\nimport { Alert } from 'selenium-webdriver';\nimport { environment } from '@env/environment';\nimport { Login } from '@app/login/login.model';\n\n@Injectable()\nexport class LoginService {\n  private readonly API_URL = '/login';\n  private readonly API_URL_USER = '/user';\n  \n  dataChange: BehaviorSubject<User[]> = new BehaviorSubject<User[]>([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  user: User;\n  constructor (private httpClient: HttpClient) {\n     \n  }\n\n  get data(): User[] {\n    return this.dataChange.value;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  // DEMO ONLY, you can find working methods below\n  login (userName: string,  password: string): any {\n    //this.dialogData = user;\n\n    this.httpClient.post(this.API_URL, new Login(userName,password,\"\")).subscribe(data => {\n      //this.dialogData = user;\n        return data;\n      },\n      (err: HttpErrorResponse) => {\n        alert(err.error.errorMessage);\n        return null;\n    });\n  }\n\n   // DEMO ONLY, you can find working methods below\n   sendForgotPassword (email: string): void {\n    //this.dialogData = user;\n\n    \n    this.httpClient.post(this.API_URL+'/forgotpassword', email).subscribe(data => {\n      //this.dialogData = user;\n        //return data;\n        alert('E-mail enviado com sucesso!');\n      },\n      (err: HttpErrorResponse) => {\n        if (err.status == 200) {\n          alert('E-mail enviado com sucesso!');\n        } else {\n          alert('Error occurred.');\n        }\n        \n    });\n  }\n\n  redefinePassword (user: User): void {\n    \n    this.httpClient.post(this.API_URL_USER+'/save', user).subscribe(data => {\n        alert('Senha alterada com sucesso!');\n      },\n      (err: HttpErrorResponse) => {\n        if (err.status == 200) {\n          alert('Senha alterada com sucesso!');\n        } else {\n          alert('Error occurred.');\n        }\n\n    });\n  }\n\n \n}\n\n\n\n/* REAL LIFE CRUD Methods I've used in my projects. ToasterService uses Material Toasts for displaying messages:\n    // ADD, POST METHOD\n    addItem(kanbanItem: KanbanItem): void {\n    this.httpClient.post(this.API_URL, kanbanItem).subscribe(data => {\n      this.dialogData = kanbanItem;\n      this.toasterService.showToaster('Successfully added', 3000);\n      },\n      (err: HttpErrorResponse) => {\n      this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n    });\n   }\n    // UPDATE, PUT METHOD\n     updateItem(kanbanItem: KanbanItem): void {\n    this.httpClient.put(this.API_URL + kanbanItem.id, kanbanItem).subscribe(data => {\n        this.dialogData = kanbanItem;\n        this.toasterService.showToaster('Successfully edited', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n  // DELETE METHOD\n  deleteItem(id: number): void {\n    this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(data['']);\n        this.toasterService.showToaster('Successfully deleted', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n*/\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.service.ts","module.exports = \"<div class=\\\"login-container\\\"  >\\n    <div class=\\\"login-title\\\"> \\n\\n       <!--<p fxLayoutAlign=\\\"center center\\\" translate> APP_NAME </p>-->\\n       <img style=\\\"height: 50%;\\\" src=\\\"./assets/unilever.jpg\\\" />\\n    </div>\\n  <div class=\\\"mat-dialog-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n     \\n    <mat-card fxFlex=\\\"90%\\\" fxFlex.sm=\\\"66%\\\" fxFlex.md=\\\"50%\\\" fxFlex.gt-md=\\\"33%\\\" class=\\\"login-box\\\">\\n      <h2 mat-dialog-title translate>Redefine</h2>\\n      <form (ngSubmit)=\\\"redefinePassword()\\\" [formGroup]=\\\"redefineForm\\\" novalidate>\\n        <div class=\\\"login-error\\\" [hidden]=\\\"!error || isLoading\\\" translate>\\n          Password incorrect.\\n        </div>\\n        <br/>\\n        <div fxLayout=\\\"column\\\">\\n         \\n          <mat-form-field>\\n            <input type=\\\"password\\\" matInput formControlName=\\\"password\\\" autocomplete=\\\"current-password\\\"\\n                   [placeholder]=\\\"'Password' | translate\\\" required/>\\n            <mat-error *ngIf=\\\"redefineForm.controls.password.valid || redefineForm.controls.password.untouched\\\">\\n              <span translate>Password is required</span>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n              <input type=\\\"password\\\" matInput formControlName=\\\"confirmPassword\\\" autocomplete=\\\"current-password\\\"\\n                     [placeholder]=\\\"'ConfirmPassword' | translate\\\" required/>\\n              <mat-error *ngIf=\\\"redefineForm.controls.password.valid || redefineForm.controls.password.untouched\\\">\\n                <span translate>RedefinePasswordInvalid</span>\\n              </mat-error>\\n          </mat-form-field>\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"redefineForm.invalid || isLoading \\\">\\n            <app-loader class=\\\"inline-loader\\\" [isLoading]=\\\"isLoading\\\"></app-loader>\\n            <span translate>Login</span>\\n          </button>\\n          <br/>\\n        </div>\\n      </form>\\n    </mat-card>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/redefine-password/redefine-password.component.html\n// module id = ./src/app/login/redefine-password/redefine-password.component.html\n// module chunks = main","module.exports = \"/*\\n * Application global variables.\\n */\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  background-color: #e0e4fa; }\\n.inline-loader {\\n  display: inline-block; }\\n.version {\\n  margin: 0; }\\n.login-box {\\n  width: auto;\\n  height: -webkit-max-content;\\n  height: -moz-max-content;\\n  height: max-content;\\n  border-radius: 5px !important;\\n  background-color: #e0e4fa; }\\n::ng-deep .mat-dialog-title {\\n  background-color: #001E64;\\n  color: white;\\n  text-align: center; }\\n::ng-deep .mat-dialog-container {\\n  overflow: hidden !important;\\n  padding: 10px !important;\\n  background-color: #e0e4fa;\\n  border-color: black;\\n  border-width: 5px;\\n  width: auto;\\n  height: 80%; }\\n.login-title {\\n  color: white;\\n  background-color: #001E64;\\n  width: 100%;\\n  height: auto; }\\n.body {\\n  width: 100%; }\\n.title {\\n  margin-top: 10%; }\\n.login-container {\\n  background-color: #001E64;\\n  width: 100%; }\\n.mat-form-field {\\n  width: 100%; }\\n.login-error {\\n  color: #f44336; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/redefine-password/redefine-password.component.scss\n// module id = ./src/app/login/redefine-password/redefine-password.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, RouterStateSnapshot } from '@angular/router';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { I18nService, AuthenticationService } from '@app/core';\nimport { LoginService } from '@app/login/login.service';\nimport { User } from '@app/user/user-model';\n\n@Component({\n  selector: 'app-redefine-password',\n  templateUrl: './redefine-password.component.html',\n  styleUrls: ['./redefine-password.component.scss']\n})\nexport class RedefinePasswordComponent implements OnInit {\n\n  error: string;\n  redefineForm: FormGroup;\n  user: User;\n  id: any;\n  constructor(private router: Router,\n    private formBuilder: FormBuilder,\n    public dataService: LoginService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private authenticationService: AuthenticationService\n  ) {\n   \n    this.id = this.GetParam('id');\n    this.createForm();\n    this.loadUser();\n  }\n  GetParam(name:string) : any{\n    const results = new RegExp('[\\\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n    if(!results){\n      return 0;\n    }\n    return results[1] || 0;\n  }\n\n  PrintParams() {\n    console.log('id = ' + this.GetParam('id'));\n\n  }\n\n  ngOnInit() {\n  }\n  private createForm() {\n    this.redefineForm = this.formBuilder.group({\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    }, { validator: this.checkIfMatchingPasswords('password', 'confirmPassword') });\n  }\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    let pass = group.controls.password.value;\n    let confirmPass = group.controls.confirmPassword.value;\n\n    return pass === confirmPass ? null : { notSame: true }\n  }\n\n  checkIfMatchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordKey],\n        passwordConfirmationInput = group.controls[passwordConfirmationKey];\n      if (passwordInput.value !== passwordConfirmationInput.value) {\n        return passwordConfirmationInput.setErrors({ notEquivalent: true })\n      }\n      else {\n        return passwordConfirmationInput.setErrors(null);\n      }\n    }\n  }\n\n  loadUser() {\n    this.authenticationService.loadUser(this.id)\n      .subscribe(\n        data => {\n          this.user = data;\n        },\n        error => {\n          this.error = error;\n          alert(error);\n        });\n  }\n  redefinePassword() {\n    this.loadUser();\n    let pass = this.redefineForm.controls['password'].value;\n    this.user.password = pass;\n    this.dataService.redefinePassword(this.user);\n    this.router.navigate(['/'], { replaceUrl: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/redefine-password/redefine-password.component.ts","module.exports = \"<div class=\\\"register-container\\\">\\n  <div class=\\\"register-title\\\">\\n\\n    <!--<p fxLayoutAlign=\\\"center center\\\" translate> APP_NAME </p>-->\\n    <img style=\\\"height: 50%;\\\" src=\\\"./assets/unilever.jpg\\\" />\\n  </div>\\n  <div class=\\\"mat-dialog-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n\\n    <mat-card fxFlex=\\\"90%\\\" fxFlex.sm=\\\"66%\\\" fxFlex.md=\\\"50%\\\" fxFlex.gt-md=\\\"33%\\\" class=\\\"register-box\\\">\\n      <h2 mat-dialog-title translate>registerUser</h2>\\n\\n      <form (ngSubmit)=\\\"register()\\\" [formGroup]=\\\"registerForm\\\" novalidate>\\n       \\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <input type=\\\"text\\\" matInput formControlName=\\\"fullname\\\" autocomplete=\\\"fullname\\\" [placeholder]=\\\"'fullName' | translate\\\" />\\n            <mat-error *ngIf=\\\"registerForm.controls.fullname.valid || registerForm.controls.fullname.untouched\\\">\\n              <span translate>Full Name is required</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n              <input type=\\\"text\\\" matInput formControlName=\\\"username\\\" autocomplete=\\\"username\\\" [placeholder]=\\\"'Username' | translate\\\" />\\n              <mat-error *ngIf=\\\"registerForm.controls.username.valid || registerForm.controls.username.untouched\\\">\\n                <span translate>Username is required</span>\\n              </mat-error>\\n            </mat-form-field>\\n         \\n          <br/>\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid || isLoading\\\">\\n            <app-loader class=\\\"inline-loader\\\" [isLoading]=\\\"isLoading\\\"></app-loader>\\n            <span translate>Save</span>\\n          </button>\\n          \\n        </div>\\n      </form>\\n    </mat-card>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/register-user/register.component.html\n// module id = ./src/app/login/register-user/register.component.html\n// module chunks = main","module.exports = \"/*\\n * Application global variables.\\n */\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  background-color: #e0e4fa; }\\n.inline-loader {\\n  display: inline-block; }\\n.version {\\n  margin: 0; }\\n.register-box {\\n  width: auto;\\n  height: -webkit-max-content;\\n  height: -moz-max-content;\\n  height: max-content;\\n  border-radius: 5px !important;\\n  background-color: #e0e4fa; }\\n::ng-deep .mat-dialog-title {\\n  background-color: #001E64;\\n  color: white;\\n  text-align: center; }\\n::ng-deep .mat-dialog-container {\\n  overflow: hidden !important;\\n  padding: 10px !important;\\n  background-color: #e0e4fa;\\n  border-color: black;\\n  border-width: 5px;\\n  width: auto;\\n  height: 80%; }\\n.register-title {\\n  color: white;\\n  background-color: #001E64;\\n  width: 100%;\\n  height: auto; }\\n.body {\\n  width: 100%; }\\n.title {\\n  margin-top: 10%; }\\n.register-container {\\n  background-color: #001E64;\\n  width: 100%; }\\n.mat-form-field {\\n  width: 100%; }\\n.register-error {\\n  color: #f44336; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/register-user/register.component.scss\n// module id = ./src/app/login/register-user/register.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger, I18nService, AuthenticationService } from '@app/core';\nimport { RegisterService } from './register.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '@app/user/user-model';\n\nconst log = new Logger('Register');\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  version: string = environment.version;\n  error: string;\n  registerForm: FormGroup;\n  user : User = new User();\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private i18nService: I18nService,\n              private registerService: RegisterService) {\n    this.createForm();\n  }\n\n  ngOnInit() { }\n\n  private createForm() {\n    this.registerForm = this.formBuilder.group({\n      fullname: ['', Validators.required],\n      username: ['', Validators.required]\n    });\n  }\n\n  register() {\n    let fullName = this.registerForm.controls[\"fullname\"].value;\n    let username = this.registerForm.controls[\"username\"].value;\n     this.user.userName = username;\n     this.user.fullName = fullName;\n     this.user.perfil = 1;\n     this.registerService.register(this.user);\n     this.router.navigate(['/'], { replaceUrl: true });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/register-user/register.component.ts","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {User} from '../../user/user-model';\nimport {HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\n\nimport { Alert } from 'selenium-webdriver';\nimport { environment } from '@env/environment';\n\n\n@Injectable()\nexport class RegisterService {\n\n  private readonly API_URL = '/user';\n  \n   constructor (private httpClient: HttpClient) {\n     \n  }\n  \n  register (user: User): void {\n    //this.dialogData = user;\n    console.log(JSON.stringify(user));\n\n    this.httpClient.post(this.API_URL+'/save', user).subscribe(data => {\n      //this.dialogData = user;\n      \n      alert('Successfully added');\n      },\n      (err: HttpErrorResponse) => {\n        alert('Error occurred. Details: ' + err.name + ' ' + err.message);\n    });\n  }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/register-user/register.service.ts","/*\n * This module imports and re-exports all Angular Material modules for convenience,\n * so only 1 module import is needed in your feature modules.\n * See https://material.angular.io/guide/getting-started#step-3-import-the-component-modules.\n *\n * To optimize your production builds, you should only import the components used in your app.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatCommonModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatLineModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatPseudoCheckboxModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatCommonModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatLineModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatOptionModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatPseudoCheckboxModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ]\n})\nexport class MaterialModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/material.module.ts","module.exports = \"<div class=\\\"table-container mat-elevation-z8\\\">\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Selecione a empresa\\\">\\n      <mat-option *ngFor=\\\"let register of cnpjs\\\" [value]=\\\"register\\\">\\n        {{register.fullName}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Digite o que procura\\\">\\n  </mat-form-field>\\n\\n\\n  <mat-table #table class=\\\"mat-table mat-elevation-z12\\\" [dataSource]=\\\"dataSource\\\" matSort>\\n\\n\\n\\n    <!-- subjectMatter Column -->\\n    <ng-container matColumnDef=\\\"subjectMatter\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'queryRecord.subjectMatter' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let queryRecord\\\"> {{queryRecord.subjectMatter}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- process Column -->\\n    <ng-container matColumnDef=\\\"process\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'queryRecord.process' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let queryRecord\\\"> {{queryRecord.process}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- year Column -->\\n    <ng-container matColumnDef=\\\"year\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'queryRecord.year' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let queryRecord\\\"> {{queryRecord.year}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- transaction Column -->\\n    <ng-container matColumnDef=\\\"transaction\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'queryRecord.transaction' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let queryRecord\\\"> {{queryRecord.transaction}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- product Column -->\\n    <ng-container matColumnDef=\\\"product\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'queryRecord.product' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let queryRecord\\\"> {{queryRecord.product}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- company Column -->\\n    <ng-container matColumnDef=\\\"company\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'queryRecord.company' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let queryRecord\\\"> {{queryRecord.company}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- company Column -->\\n    <ng-container matColumnDef=\\\"situation\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'queryRecord.situation' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let queryRecord\\\"> {{queryRecord.situation}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- actions\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n        </button>\\n      </mat-header-cell>\\n\\n      <mat-cell *matCellDef=\\\"let queryRecord; let i=index;\\\">\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"startEdit(i, queryRecord)\\\">\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n        </button>\\n\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"deleteItem(i, row.id, row.title, row.state, row.url)\\\">\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n        </button>\\n\\n        \\n      </mat-cell>\\n     \\n    </ng-container> -->\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n\\n    </mat-row>\\n\\n  </mat-table>\\n  <mat-paginator [length]=\\\"100\\\" [pageSize]=\\\"100\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n  </mat-paginator>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/queryrecords/queryrecord-list/queryrecord-list.component.html\n// module id = ./src/app/queryrecords/queryrecord-list/queryrecord-list.component.html\n// module chunks = main","module.exports = \"::ng-deep .column {\\n  width: 99%; }\\n\\n::ng-deep .full-width {\\n  width: 99%; }\\n\\n::ng-deep .auto-width {\\n  width: auto; }\\n\\n/* Clear floats after the columns */\\n\\n::ng-deep .row:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both; }\\n\\n::ng-deep .mat-dialog-title {\\n  background-color: #001E64;\\n  color: white;\\n  text-align: center; }\\n\\n::ng-deep .mat-dialog-container {\\n  overflow: hidden !important;\\n  border-radius: 5px !important;\\n  padding: 5px !important;\\n  background-color: #e0e4fa;\\n  height: -webkit-max-content;\\n  height: -moz-max-content;\\n  height: max-content; }\\n\\n::ng-deep .mat-dialog-actions {\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n\\n::ng-deep .mat-dialog-actions .mat-button {\\n    background-color: #001E64;\\n    -webkit-text-fill-color: white;\\n    margin-bottom: 15px; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:disabled(:first-child) {\\n      background-color: #001E64;\\n      -webkit-text-fill-color: black; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:not(:first-child), ::ng-deep .mat-dialog-actions .mat-button :not(:last-child) {\\n      -webkit-text-fill-color: white; }\\n\\n::ng-deep .flex-spacer {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto; }\\n\\n::ng-deep .mat-form-field {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-checkbox {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-radio-group {\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column; }\\n\\n::ng-deep .mat-radio-button {\\n  margin: 5px; }\\n\\n.selected-value {\\n  margin: 15px 0; }\\n\\n::ng-deep .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .span-label {\\n  font-size: 8px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-focused .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline .mat-form-field-ripple {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-button, .mat-raised-button {\\n  background-color: #001E64;\\n  -webkit-text-decoration-color: white;\\n          text-decoration-color: white; }\\n\\n::ng-deep .mat-success {\\n  background-color: #001E64;\\n  color: black; }\\n\\n::ng-deep .mat-button-focus {\\n  background-color: #001E64;\\n  color: black; }\\n\\n.mat-cell:nth-child(1),\\n.mat-header-cell:nth-child(1) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 200px;\\n          flex: 0 0 200px; }\\n\\n.mat-cell:nth-child(2),\\n.mat-header-cell:nth-child(2) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 100px;\\n          flex: 0 0 100px; }\\n\\n.mat-cell:nth-child(3),\\n.mat-header-cell:nth-child(3) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 40px;\\n          flex: 0 0 40px; }\\n\\n.mat-cell:nth-child(4),\\n.mat-header-cell:nth-child(4) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 60px;\\n          flex: 0 0 60px; }\\n\\n.mat-cell:nth-child(5),\\n.mat-header-cell:nth-child(5) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 150px;\\n          flex: 0 0 150px; }\\n\\n.mat-cell:nth-child(6),\\n.mat-header-cell:nth-child(6) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 150px;\\n          flex: 0 0 150px; }\\n\\n.mat-cell:nth-child(7),\\n.mat-header-cell:nth-child(7) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 200px;\\n          flex: 0 0 200px; }\\n\\n.mat-cell:nth-child(8) {\\n  -webkit-text-fill-color: #001E64; }\\n\\n.mat-header-cell:nth-child(8) {\\n  -webkit-text-fill-color: white;\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 10%;\\n          flex: 0 0 10%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/queryrecords/queryrecord-list/queryrecord-list.component.scss\n// module id = ./src/app/queryrecords/queryrecord-list/queryrecord-list.component.scss\n// module chunks = main","import { Component, ElementRef, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatPaginator,MatTableDataSource, MatSort, MatDialog, PageEvent } from '@angular/material';\n\nimport { I18nService, AuthenticationService } from '@app/core';\nimport { Queryrecords} from '../queryrecords.model';\nimport { QueryrecordsService } from '../queryrecords.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { RegisterCNPJ } from '@app/cnpj/cnpj-model';\n\n@Component({\n  selector: 'app-queryrecord-list',\n  templateUrl: './queryrecord-list.component.html',\n  styleUrls: ['./queryrecord-list.component.scss']\n})\nexport class QueryrecordListComponent implements OnInit {\n\n  error: HttpErrorResponse;\n  displayedColumns = ['subjectMatter', 'process', 'year', 'transaction', 'product', 'company', 'situation'];\n  ELEMENT_DATA: Queryrecords[];\n  selectedOptions:RegisterCNPJ;\n  cnpjs:RegisterCNPJ[];\n\n  constructor( public dataService: QueryrecordsService,\n               public i18nService: I18nService) { \n\n  }\n\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild('filter') filter: ElementRef;\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  ngOnInit() {\n    this.loadData(this.selectedOptions);\n    this.dataSource.sort      = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  public loadData(selectedOptions:RegisterCNPJ) {\n    \n    // this.dataService.getRegisterCNPJ(selectedOptions)\n    //                 .subscribe(\n    //                   data => {\n    //                     this.ELEMENT_DATA = data;\n    //                     this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n    //                   },\n    //                   error => {\n    //                     this.error = error;\n    //                     alert(error); \n    //                   });\n  \n  } \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/queryrecords/queryrecord-list/queryrecord-list.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Route, extract } from '@app/core';\nimport { QueryrecordListComponent } from './queryrecord-list/queryrecord-list.component'\n\nconst routes: Routes = [\n  Route.withShell([\n  { path: 'queryRecord', component: QueryrecordListComponent, data: { title: extract('queryRecords') } }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class QueryrecordsRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/queryrecords/queryrecords-routing.module.ts","\r\nexport class Queryrecords {\r\n     subjectMatter:string;\r\n     process:string;\r\n     ano:string;\r\n     transaction:string;\r\n     officeHour:String;\r\n     produtc:string;\r\n     company:string;\r\n     situation:string;\r\n    constructor(){\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/queryrecords/queryrecords.model.ts","import { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MaterialModule } from '@app/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from '../shared';\nimport { TextMaskModule } from 'angular2-text-mask';\n\nimport { Queryrecords } from './queryrecords.model';\nimport { QueryrecordsService } from './queryrecords.service';\nimport { QueryrecordsRoutingModule } from './queryrecords-routing.module';\nimport { QueryrecordListComponent } from './queryrecord-list/queryrecord-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FlexLayoutModule,\n    MaterialModule,\n    FormsModule, ReactiveFormsModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    TextMaskModule,\n    QueryrecordsRoutingModule\n  ],\n  exports:[QueryrecordListComponent],\n  declarations: [QueryrecordListComponent],\n  providers:[QueryrecordsService,Queryrecords],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class QueryrecordsModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/queryrecords/queryrecords.module.ts","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport 'rxjs/Rx';\nimport {User} from '../user/user-model';\nimport {HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Headers, Http } from '@angular/http';\n \nimport 'rxjs/add/operator/toPromise';\n\nimport { Alert, error } from 'selenium-webdriver';\nimport { environment } from '@env/environment';\nimport { Queryrecords} from './queryrecords.model';\nimport { RegisterCNPJ } from '@app/cnpj/cnpj-model';\nimport { AuthenticationService } from '@app/core';\n\n@Injectable()\nexport class QueryrecordsService {\n  private readonly API_URL = '/user';\n  \n  dataChange: Observable<Queryrecords[]> = new Observable<Queryrecords[]>();\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  private headers = new Headers({'Content-Type': 'application/json'});\n  constructor (private httpClient: HttpClient,\n                public autenticeService: AuthenticationService) {\n     \n  }\n\n  get data(): Observable<Queryrecords[]> {\n    return this.dataChange;\n  }\n\n  /** CRUD METHODS */\n  getQueryRegister(registerCNPJ: RegisterCNPJ): Observable<Queryrecords[]> {\n    let user = this.autenticeService.loadUser(null);\n    return this.httpClient.get(this.API_URL+'/product/'+registerCNPJ.cnpj)\n                    .map(response => response)\n                    .catch(error=> Observable.throw(error.message));\n  }\n\n  // getQueryRegister(registerCNPJ: RegisterCNPJ): Observable<Queryrecords[]> {\n  //   let user = this.autenticeService.loadUser(null);\n  //   return this.httpClient.get(this.API_URL+'/product/'+registerCNPJ.cnpj)\n  //                   .map(response => response)\n  //                   .catch(error=> Observable.throw(error.message));\n  // }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/queryrecords/queryrecords.service.ts","export * from './shared.module';\nexport * from './loader/loader.component';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/index.ts","module.exports = \"<div [hidden]=\\\"!isLoading\\\">\\n  <mat-progress-spinner mode=\\\"indeterminate\\\" [strokeWidth]=\\\"2\\\" [diameter]=\\\"32 * size\\\"></mat-progress-spinner>\\n  <span class=\\\"message\\\">{{message}}</span>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/loader/loader.component.html\n// module id = ./src/app/shared/loader/loader.component.html\n// module chunks = main","module.exports = \".mat-progress-spinner {\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.message {\\n  margin-left: 0.5em; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/loader/loader.component.scss\n// module id = ./src/app/shared/loader/loader.component.scss\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  @Input() isLoading = false;\n  @Input() size = 1;\n  @Input() message: string;\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/loader/loader.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from '@app/material.module';\nimport { LoaderComponent } from './loader/loader.component';\nimport { FormsModule } from '@angular/forms';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { CustomValidator } from './validators';\n\n@NgModule({\n  imports: [\n    FlexLayoutModule,\n    MaterialModule,\n    CommonModule,\n    FormsModule,\n    TextMaskModule\n  ],\n  declarations: [\n    LoaderComponent\n  ],\n  exports: [\n    LoaderComponent\n  ]\n})\nexport class SharedModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","import {FormControl} from '@angular/forms';\r\nimport {ValidationResult} from './validation-result';\r\nimport { isDate } from 'moment';\r\n\r\n\r\nexport class DateValidator {\r\n  static validDate(control:FormControl): ValidationResult {\r\n    let datePattern = /^(((0[1-9]|[12][0-9]|30)[-/]?(0[13-9]|1[012])|31[-/]?(0[13578]|1[02])|(0[1-9]|1[0-9]|2[0-8])[-/]?02)[-/]?[0-9]{4}|29[-/]?02[-/]?([0-9]{2}(([2468][048]|[02468][48])|[13579][26])|([13579][26]|[02468][048]|0[0-9]|1[0-6])00))$/;\r\n    \r\n    if (!control.value.match(datePattern) || control.value.isUndefined || !control.value.null)\r\n      return { \"date\": true };\r\n\r\n    return null;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/validators/date.validator.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Route, extract } from '@app/core';\nimport { UpdateParameterComponent } from '@app/update-parameter/update-parameter.component';\n\nconst routes: Routes = [\n  Route.withShell([\n    { path: 'update', component: UpdateParameterComponent, data: { title: extract('UpdateParameters') } }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UpdateParameterRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/update-parameter/update-parameter-routing.module.ts","module.exports = \"<div style=\\\"height: max-content;\\\" class=\\\"table-container mat-elevation-z8\\\">\\n  <mat-card class=\\\"param-container\\\">\\n\\n    <mat-card-content >\\n\\n      <form  (ngSubmit)=\\\"submit\\\" [formGroup]=\\\"form\\\">\\n        \\n        <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"center\\\" layout-wrap>\\n        \\n          <mat-form-field class=\\\"version\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.version' | translate }}\\\" formControlName=\\\"version\\\"\\n              [(ngModel)]=\\\"data.version\\\">\\n            <mat-error *ngIf=\\\"form.controls.version.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"systemName\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.systemName' | translate }}\\\" formControlName=\\\"systemName\\\"\\n              [(ngModel)]=\\\"data.systemName\\\">\\n            <mat-error *ngIf=\\\"form.controls.systemName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n        \\n        </section>  \\n        \\n        <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-between center\\\" layout-wrap>  \\n          <mat-form-field class=\\\"cnpj\\\">\\n                <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.cnpj' | translate }}\\\" formControlName=\\\"cnpj\\\"\\n                  [(ngModel)]=\\\"data.cnpj\\\">\\n                <mat-error *ngIf=\\\"form.controls.cnpj.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"socialName\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.socialName' | translate }}\\\" formControlName=\\\"socialName\\\"\\n              [(ngModel)]=\\\"data.socialName\\\">\\n            <mat-error *ngIf=\\\"form.controls.socialName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n        \\n        </section>  \\n        \\n        <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-between center\\\" layout-wrap>\\n        \\n          <mat-form-field class=\\\"codeZip\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.codeZip' | translate }}\\\" formControlName=\\\"codeZip\\\"\\n              [(ngModel)]=\\\"data.codeZip\\\">\\n            <mat-error *ngIf=\\\"form.controls.codeZip.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"address\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.address' | translate }}\\\" formControlName=\\\"address\\\"\\n              [(ngModel)]=\\\"data.address\\\">\\n            <mat-error *ngIf=\\\"form.controls.address.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"number\\\">\\n              <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.number' | translate }}\\\" formControlName=\\\"number\\\"\\n                [(ngModel)]=\\\"data.number\\\">\\n              \\n            </mat-form-field>\\n        \\n          <mat-form-field class=\\\"neighborhood\\\">\\n              <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.neighborhood' | translate }}\\\" formControlName=\\\"neighborhood\\\"\\n                [(ngModel)]=\\\"data.neighborhood\\\">\\n              <mat-error *ngIf=\\\"form.controls.neighborhood.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n      </section>  \\n        \\n      <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-between center\\\" layout-wrap>\\n\\n          <mat-form-field class=\\\"city\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.city' | translate }}\\\" formControlName=\\\"city\\\"\\n              [(ngModel)]=\\\"data.city\\\">\\n            <mat-error *ngIf=\\\"form.controls.city.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"state\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.state' | translate }}\\\" formControlName=\\\"state\\\"\\n              [(ngModel)]=\\\"data.state\\\">\\n            <mat-error *ngIf=\\\"form.controls.state.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"emailClient\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.emailClient' | translate }}\\\" formControlName=\\\"emailClient\\\"\\n              [(ngModel)]=\\\"data.emailClient\\\">\\n            <mat-error *ngIf=\\\"form.controls.emailClient.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n          \\n          <mat-form-field class=\\\"responsiblePerson\\\">\\n              <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.responsiblePerson' | translate }}\\\"\\n                formControlName=\\\"responsiblePerson\\\" [(ngModel)]=\\\"data.responsiblePerson\\\">\\n              <mat-error *ngIf=\\\"form.controls.responsiblePerson.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n            </mat-form-field>\\n      </section>  \\n        \\n      <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-between center\\\" layout-wrap>\\n      \\n          <mat-form-field class=\\\"emailReponsible\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.emailReponsible' | translate }}\\\"\\n              formControlName=\\\"emailReponsible\\\" [(ngModel)]=\\\"data.emailReponsible\\\">\\n            <mat-error *ngIf=\\\"form.controls.emailReponsible.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"emailDefault\\\">\\n            <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'genericParameter.emailDefault' | translate }}\\\" formControlName=\\\"emailDefault\\\"\\n              [(ngModel)]=\\\"data.emailDefault\\\">\\n            <mat-error *ngIf=\\\"form.controls.emailDefault.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n          </mat-form-field>\\n\\n        </section>\\n      </form>\\n      <mat-dialog-actions class=\\\"mat-dialog-actions-params\\\"> \\n          <button style=\\\"align-content: center center\\\" class=\\\"mat-raised-button\\\" mat-button [type]=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" \\n            (click)=\\\"save()\\\" translate>{{ 'save' | translate }}</button>\\n          <button class=\\\"mat-raised-button\\\" mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">{{ 'cancel' | translate }}</button>\\n        </mat-dialog-actions>\\n    </mat-card-content>\\n    \\n  </mat-card>\\n\\n</div>\\n\\n\\n    \\n      \\n      \\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/update-parameter/update-parameter.component.html\n// module id = ./src/app/update-parameter/update-parameter.component.html\n// module chunks = main","module.exports = \"::ng-deep .column {\\n  width: 99%; }\\n\\n::ng-deep .full-width {\\n  width: 99%; }\\n\\n::ng-deep .auto-width {\\n  width: auto; }\\n\\n/* Clear floats after the columns */\\n\\n::ng-deep .row:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both; }\\n\\n::ng-deep .mat-dialog-title {\\n  background-color: #001E64;\\n  color: white;\\n  text-align: center; }\\n\\n::ng-deep .mat-dialog-container {\\n  overflow: hidden !important;\\n  border-radius: 5px !important;\\n  padding: 5px !important;\\n  background-color: #e0e4fa;\\n  height: -webkit-max-content;\\n  height: -moz-max-content;\\n  height: max-content; }\\n\\n::ng-deep .mat-dialog-actions {\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n\\n::ng-deep .mat-dialog-actions .mat-button {\\n    background-color: #001E64;\\n    -webkit-text-fill-color: white;\\n    margin-bottom: 15px; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:disabled(:first-child) {\\n      background-color: #001E64;\\n      -webkit-text-fill-color: black; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:not(:first-child), ::ng-deep .mat-dialog-actions .mat-button :not(:last-child) {\\n      -webkit-text-fill-color: white; }\\n\\n::ng-deep .flex-spacer {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto; }\\n\\n::ng-deep .mat-form-field {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-checkbox {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-radio-group {\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column; }\\n\\n::ng-deep .mat-radio-button {\\n  margin: 5px; }\\n\\n.selected-value {\\n  margin: 15px 0; }\\n\\n::ng-deep .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .span-label {\\n  font-size: 8px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-focused .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline .mat-form-field-ripple {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-button, .mat-raised-button {\\n  background-color: #001E64;\\n  -webkit-text-decoration-color: white;\\n          text-decoration-color: white; }\\n\\n::ng-deep .mat-success {\\n  background-color: #001E64;\\n  color: black; }\\n\\n::ng-deep .mat-button-focus {\\n  background-color: #001E64;\\n  color: black; }\\n\\n.param-container {\\n  background-color: #e0e4fa; }\\n\\n.version {\\n  width: 20%; }\\n\\n.systemName {\\n  width: 40%; }\\n\\n.cnpj {\\n  width: 20%; }\\n\\n.socialName {\\n  width: 40%; }\\n\\n.codeZip {\\n  width: 20%; }\\n\\n.address {\\n  width: 40%; }\\n\\n.number {\\n  width: 10%; }\\n\\n.neighborhood {\\n  width: 20%; }\\n\\n.city {\\n  width: 20%; }\\n\\n.state {\\n  width: 5%; }\\n\\n.emailClient {\\n  width: 34%; }\\n\\n.responsiblePerson {\\n  width: 30%; }\\n\\n.emailReponsible {\\n  width: 45%; }\\n\\n.emailDefault {\\n  width: 46%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/update-parameter/update-parameter.component.scss\n// module id = ./src/app/update-parameter/update-parameter.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { UpdateParameter } from '@app/update-parameter/update-parameter.model';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { I18nService } from '@app/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { UpdateParameterService } from '@app/update-parameter/update-parameter.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-parameter',\n  templateUrl: './update-parameter.component.html',\n  styleUrls: ['./update-parameter.component.scss']\n})\nexport class UpdateParameterComponent implements OnInit {\n\n  form: FormGroup;\n  data: UpdateParameter = new UpdateParameter();\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    public updateParameterService : UpdateParameterService,\n    public i18n: I18nService) { }\n\n  ngOnInit() {\n    this.updateParameterService.load().subscribe(data => {\n      this.data = data;\n    },err  => {\n      this.data = new UpdateParameter();\n    });\n\n    this.form = this.formBuilder.group({\n      version: new FormControl('', [Validators.required]),\n      systemName: new FormControl('', [Validators.required]),\n      socialName: new FormControl('', [Validators.required]),\n      cnpj: new FormControl('', [Validators.required]),\n      codeZip: new FormControl('', [Validators.required]),\n      address: new FormControl('', [Validators.required]),\n      number: new FormControl('', [Validators.required]),\n      neighborhood: new FormControl('', [Validators.required]),\n      city: new FormControl('', [Validators.required]),\n      state: new FormControl('', [Validators.required]),\n      emailClient: new FormControl('', [Validators.required]),\n      responsiblePerson:new FormControl('', [Validators.required]),\n      emailReponsible: new FormControl('', [Validators.required]),\n      emailDefault: new FormControl('', [Validators.required])\n    });\n  }\n\n  getErrorMessage() {\n\n    return this.form.controls.version.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.systemName.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.socialName.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.cnpj.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.codeZip.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.address.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.neighborhood.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.city.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.emailClient.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.responsiblePerson.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.emailReponsible.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.emailDefault.hasError('required') ? 'fieldEmpty' :\n    '';\n  }\n\n  save(){\n\n    this.data.version     = this.form.controls[\"version\"].value;\n    this.data.systemName\t= this.form.controls[\"systemName\"].value;\n    this.data.socialName\t= this.form.controls[\"socialName\"].value;\n    this.data.cnpj\t\t    = this.form.controls[\"cnpj\"].value;\n    this.data.codeZip\t\t  = this.form.controls[\"codeZip\"].value;\n    this.data.address\t\t  = this.form.controls[\"address\"].value;\n    this.data.number\t\t  = this.form.controls[\"number\"].value;\n    this.data.neighborhood\t= this.form.controls[\"neighborhood\"].value;\n    this.data.city\t\t      = this.form.controls[\"city\"].value;\n    this.data.state\t\t      = this.form.controls[\"state\"].value;\n    this.data.emailClient\t  = this.form.controls[\"emailClient\"].value;\n    this.data.responsiblePerson = this.form.controls[\"responsiblePerson\"].value;\t\n    this.data.emailReponsible\t  = this.form.controls[\"emailReponsible\"].value;\n    this.data.emailDefault\t    = this.form.controls[\"emailDefault\"].value;\n  /*   this.data.updateUser\t      = this.form.controls[\"updateUser\"].value;\n    this.data.updateDate\t      = this.form.controls[\"updateUser\"].value; */\n\n    this.updateParameterService.save(this.data);\n  }\n\n  onNoClick() {\n    this.router.navigate(['/'], { replaceUrl: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/update-parameter/update-parameter.component.ts","import { DataModel } from \"@app/core/model/datamodel\";\r\nimport { User } from \"@app/user/user-model\";\r\n\r\nexport class UpdateParameter {\r\n     id: number;\r\n     version:string;\r\n     systemName:string;\r\n     socialName: string;\r\n     cnpj:number;\r\n     codeZip: number;\r\n     address: string;\r\n     number: string;\r\n     neighborhood: string;\r\n     city: string;\r\n     state: string;\r\n     emailClient: string;\r\n     responsiblePerson: string;\r\n     emailReponsible: string;\r\n     emailDefault: string;\r\n     updateUser:User;\r\n     updateDate:Date;\r\n    //constructor() \r\n    /*constructor(id: number,\r\n        version:string,\r\n        systemName:string,\r\n        socialName: string,\r\n        cnpj:number,\r\n        codeZip: number,\r\n        address: string,\r\n        city: string,\r\n        state: string,\r\n        emailClient: string,\r\n        responsiblePerson: string,\r\n        emailReponsible: string,\r\n        emailDefault: string,\r\n        contactPerson: string,\r\n        emailSuport: string,\r\n        phoneSuport: string,\r\n        updateUser:User,\r\n        updateDate:Date){\r\n        super(id)\r\n        this.id = id;\r\n        this.version = version;\r\n        this.systemName = systemName;\r\n        this.socialName = socialName;\r\n        this.cnpj       = cnpj;\r\n        this.codeZip    = codeZip;\r\n        this.address    = address;\r\n        this.city       = city;\r\n        this.state      = state;\r\n        this.emailClient= emailClient;\r\n        this.responsiblePerson = responsiblePerson; \r\n        this.emailReponsible   = emailReponsible;\r\n        this.emailDefault      = emailDefault;\r\n        this.contactPerson     = contactPerson;\r\n        this.emailSuport       = emailSuport;\r\n        this.phoneSuport       = phoneSuport;\r\n        this.updateUser        = updateUser;\r\n        this.updateDate        = updateDate;\r\n    }*/\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/update-parameter/update-parameter.model.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { UpdateParameterRoutingModule } from './update-parameter-routing.module';\nimport { UpdateParameterComponent } from './update-parameter.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreModule } from '@app/core';\nimport { SharedModule } from '@app/shared';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from '@app/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UpdateParameter } from '@app/update-parameter/update-parameter.model';\nimport { UpdateParameterService } from '@app/update-parameter/update-parameter.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    CoreModule,\n    SharedModule,\n    FlexLayoutModule,\n    MaterialModule,\n    UpdateParameterRoutingModule\n  ],\n  providers:[UpdateParameterService],\n  declarations: [UpdateParameterComponent]\n})\nexport class UpdateParameterModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/update-parameter/update-parameter.module.ts","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport {User} from '../user/user-model';\r\nimport {HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Headers, Http } from '@angular/http';\r\n \r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Alert, error } from 'selenium-webdriver';\r\nimport { environment } from '@env/environment';\r\nimport { UpdateParameter } from '@app/update-parameter/update-parameter.model';\r\n\r\n\r\n@Injectable()\r\nexport class UpdateParameterService {\r\n  private readonly API_URL = '/updateparameter';\r\n  \r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n  constructor (private httpClient: HttpClient) {\r\n     \r\n  }\r\n\r\n  load(): Observable<UpdateParameter> {\r\n    \r\n    return this.httpClient.get(this.API_URL+'/load/')\r\n    .map(response => response)\r\n    .catch(error=> Observable.throw(error.message));\r\n    \r\n  }\r\n\r\n \r\n  // DEMO ONLY, you can find working methods below\r\n  save (updateParameter: UpdateParameter): void {\r\n    //this.dialogData = user;\r\n    console.log(JSON.stringify(updateParameter));\r\n\r\n    this.httpClient.post(this.API_URL+'/save', updateParameter).subscribe(data => {\r\n      //this.dialogData = user;\r\n      \r\n      alert('Successfully save');\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        alert('Error occurred. Details: ' + err.name + ' ' + err.message);\r\n    });\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/update-parameter/update-parameter.service.ts","module.exports = \"<h2 mat-dialog-title translate>\\n  user.insert</h2>\\n<mat-dialog-content>\\n  <form (ngSubmit)=\\\"submit\\\" [formGroup]=\\\"form\\\">\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'user.fullName' | translate }}\\\" formControlName=\\\"fullName\\\"\\n        [(ngModel)]=\\\"data.fullName\\\">\\n      <mat-error *ngIf=\\\"form.controls.fullName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n    </mat-form-field>\\n\\n    <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-between center\\\" layout-wrap>\\n      \\n    <div layout=\\\"row\\\"  layout-align=\\\"space-between center\\\" fix>\\n        <mat-form-field>\\n          <input matInput class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'user.userName' | translate }}\\\" formControlName=\\\"userName\\\"\\n            [(ngModel)]=\\\"data.userName\\\">\\n          <mat-error *ngIf=\\\"form.controls.userName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n              <input matInput class=\\\"form-control\\\" [textMask]=\\\"{mask: mask}\\\" placeholder=\\\"{{ 'user.dateBrith' | translate }}\\\" formControlName=\\\"dateBrith\\\"\\n                [(ngModel)]=\\\"data.dateBrith\\\" required>\\n              <mat-error *ngIf=\\\"form.controls.dateBrith.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field>\\n            <input matInput class=\\\"form-control\\\" [textMask]=\\\"{mask: maskPhone}\\\" placeholder=\\\"{{ 'user.phone' | translate }}\\\" formControlName=\\\"cellPhone\\\"\\n              [(ngModel)]=\\\"data.cellPhone\\\">\\n            <!--<mat-error *ngIf=\\\"form.controls.cellPhone.invalid\\\">{{getErrorMessage() | translate}}</mat-error>-->\\n        </mat-form-field>\\n    </div>\\n    </section>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput class=\\\"form-control\\\" type=\\\"email\\\" placeholder=\\\"{{ 'user.email' | translate }}\\\" formControlName=\\\"email\\\" [(ngModel)]=\\\"data.email\\\"/>\\n      <mat-error *ngIf=\\\"form.controls.email.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Perfil\\\" [(ngModel)]=\\\"data.perfil\\\" formControlName=\\\"email\\\" name=\\\"perfil\\\">\\n        <mat-option *ngFor=\\\"let perfil of perfis\\\" [value]=\\\"perfil.value\\\">\\n          {{perfil.viewValue}}\\n        </mat-option>\\n      </mat-select>\\n\\n    </mat-form-field>\\n  \\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Ativo\\\" [(ngModel)]=\\\"data.active\\\" formControlName=\\\"active\\\" name=\\\"active\\\">\\n        <mat-option *ngFor=\\\"let active of actives\\\" [value]=\\\"active.value\\\">\\n          {{active.viewValue}}\\n        </mat-option>\\n      </mat-select>\\n\\n    </mat-form-field>\\n\\n  </form>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions> \\n  <button class=\\\"mat-raised-button\\\" mat-button [type]=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" [mat-dialog-close]=\\\"1\\\"\\n    (click)=\\\"confirmAdd()\\\" translate>{{ 'save' | translate }}</button>\\n  <button class=\\\"mat-raised-button\\\" mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">{{ 'cancel' | translate }}</button>\\n</mat-dialog-actions>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-add/user-add.component.html\n// module id = ./src/app/user/user-add/user-add.component.html\n// module chunks = main","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {Component, Inject, OnInit} from '@angular/core';\nimport {UserService} from '../../user/user.service';\nimport {FormGroup, Validators, FormControl} from '@angular/forms';\nimport { User } from '@app/user/user-model';\nimport { I18nService, extract } from '@app/core';\nimport { EmailValidator,CustomValidator } from '@app/shared/validators';\nimport { DateValidator } from '@app/shared/validators/date.validator';\nimport { PhoneValidator } from '@app/shared/validators/phone.validator';\n\n\n\n\n@Component({\n  selector: 'app-add.dialog',\n  templateUrl: './user-add.component.html'\n})\n\nexport class UserAddDialogComponent implements OnInit {\n  hide:any;\n  hideConf:any;\n  confirmPassword:string;\n  user:User;\n  \n  form: FormGroup;\n\n  perfis = [\n    {value: 0,  viewValue: 'Administrador'},\n    {value: 1,  viewValue: 'Operador'}\n  ];\n\n  actives = [\n    {value: true,   viewValue: 'Sim'},\n    {value: false,  viewValue: 'Não'}\n  ];\n\n  public  mask = [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/];\n  public  maskPhone = ['(', /[1-9]/, /\\d/,')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\n\n  constructor(public dialogRef: MatDialogRef<UserAddDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: User,\n              public dataService: UserService,\n              public i18n: I18nService) {\n                  \n  }\n  \n  ngOnInit() {\n      this.form  = new FormGroup({\n        fullName:  new FormControl('', [Validators.required]),\n        userName:  new FormControl('', [Validators.required]),\n        dateBrith: new FormControl('', [Validators.required,DateValidator.validDate]),\n        email:     new FormControl('', [Validators.required]),\n        cellPhone: new FormControl('', [Validators.required])\n        \n    });\n  }\n\n  getErrorMessage() {\n    return this.form.controls.email.hasError('required') ? 'fieldEmpty' :\n           this.form.controls.email.hasError('email') ? 'invalidEmail' :\n           this.form.controls.dateBrith.hasError('required') ? 'fieldEmpty' :\n           this.form.controls.dateBrith.hasError('date') ? 'invalidDate' :\n           this.form.controls.cellPhone.hasError('required') ? 'fieldEmpty' :\n           this.form.controls.pefil.hasError('required') ? 'fieldEmpty' :\n           this.form.controls.active.hasError('required') ? 'fieldEmpty' :\n           //this.form.controls.cellPhone.hasError('cellPhone') ? 'invalidPhone' :\n            '';\n  }\n\n  submit() {\n  // emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n\n    //this.user = new User(null,  'Afred', 'ALESSANDRO FRED A DE SOUZA', 'fredalessandro@gmail.com', '81984147601', new Date(), 'idkfa',true, null, new Date(),null,new Date());   \n    this.dataService.save(this.data);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-add/user-add.component.ts","module.exports = \"<div class=\\\"register-container\\\">\\n  <div class=\\\"register-title\\\">\\n\\n    <!--<p fxLayoutAlign=\\\"center center\\\" translate> APP_NAME </p>-->\\n    <img style=\\\"height: 50%;\\\" src=\\\"./assets/unilever.jpg\\\" />\\n  </div>\\n  <div class=\\\"mat-dialog-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n\\n    <mat-card fxFlex=\\\"90%\\\" fxFlex.sm=\\\"66%\\\" fxFlex.md=\\\"50%\\\" fxFlex.gt-md=\\\"33%\\\" class=\\\"register-box\\\">\\n      <h2 mat-dialog-title translate>registerUser</h2>\\n\\n      <form (ngSubmit)=\\\"register()\\\" [formGroup]=\\\"registerForm\\\" novalidate>\\n       \\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <input type=\\\"text\\\" matInput formControlName=\\\"fullname\\\" autocomplete=\\\"fullname\\\" [placeholder]=\\\"'fullName' | translate\\\" />\\n            <mat-error *ngIf=\\\"registerForm.controls.fullname.valid || registerForm.controls.fullname.untouched\\\">\\n              <span translate>Full Name is required</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n              <input type=\\\"text\\\" matInput formControlName=\\\"username\\\" autocomplete=\\\"username\\\" [placeholder]=\\\"'Username' | translate\\\" />\\n              <mat-error *ngIf=\\\"registerForm.controls.username.valid || registerForm.controls.username.untouched\\\">\\n                <span translate>Username is required</span>\\n              </mat-error>\\n            </mat-form-field>\\n         \\n          <br/>\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid || isLoading\\\">\\n            <app-loader class=\\\"inline-loader\\\" [isLoading]=\\\"isLoading\\\"></app-loader>\\n            <span translate>Save</span>\\n          </button>\\n          \\n        </div>\\n      </form>\\n    </mat-card>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-cnpj/user-cnpj.component.html\n// module id = ./src/app/user/user-cnpj/user-cnpj.component.html\n// module chunks = main","module.exports = \"/*\\n * Application global variables.\\n */\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  background-color: #e0e4fa; }\\n.inline-loader {\\n  display: inline-block; }\\n.version {\\n  margin: 0; }\\n.register-box {\\n  width: auto;\\n  height: -webkit-max-content;\\n  height: -moz-max-content;\\n  height: max-content;\\n  border-radius: 5px !important;\\n  background-color: #e0e4fa; }\\n::ng-deep .mat-dialog-title {\\n  background-color: #001E64;\\n  color: white;\\n  text-align: center; }\\n::ng-deep .mat-dialog-container {\\n  overflow: hidden !important;\\n  padding: 10px !important;\\n  background-color: #e0e4fa;\\n  border-color: black;\\n  border-width: 5px;\\n  width: auto;\\n  height: 80%; }\\n.register-title {\\n  color: white;\\n  background-color: #001E64;\\n  width: 100%;\\n  height: auto; }\\n.body {\\n  width: 100%; }\\n.title {\\n  margin-top: 10%; }\\n.register-container {\\n  background-color: #001E64;\\n  width: 100%; }\\n.mat-form-field {\\n  width: 100%; }\\n.register-error {\\n  color: #f44336; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-cnpj/user-cnpj.component.scss\n// module id = ./src/app/user/user-cnpj/user-cnpj.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { environment } from '@env/environment';\nimport { Logger, I18nService, AuthenticationService } from '@app/core';\nimport { UserService } from '../user.service';\nimport { User } from '@app/user/user-model';\n\n\nconst log = new Logger('UserCNPJ');\n\n@Component({\n  selector: 'app-user-cnpj',\n  templateUrl: './user-cnpj.component.html',\n  styleUrls: ['./user-cnpj.component.scss']\n})\nexport class UserCNPJComponent implements OnInit {\n\n  version: string = environment.version;\n  error: string;\n  registerForm: FormGroup;\n  user : User = new User();\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private i18nService: I18nService,\n              private userService: UserService) {\n    this.createForm();\n  }\n\n  ngOnInit() { }\n\n  private createForm() {\n    \n  }\n\n  register() {\n    let fullName = this.registerForm.controls[\"fullname\"].value;\n    let username = this.registerForm.controls[\"username\"].value;\n     this.user.userName = username;\n     this.user.fullName = fullName;\n     this.user.perfil = 1;\n     this.userService.save(this.user);\n     this.router.navigate(['/'], { replaceUrl: true });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-cnpj/user-cnpj.component.ts","module.exports = \"<h2 mat-dialog-title translate>\\n  user.insert</h2>\\n<mat-dialog-content>\\n  <form (ngSubmit)=\\\"submit\\\" [formGroup]=\\\"form\\\">\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'user.fullName' | translate }}\\\" formControlName=\\\"fullName\\\"\\n        [(ngModel)]=\\\"data.fullName\\\">\\n      <mat-error *ngIf=\\\"form.controls.fullName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n    </mat-form-field>\\n\\n    <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-between center\\\" layout-wrap>\\n      \\n    <div layout=\\\"row\\\"  layout-align=\\\"space-between center\\\" fix>\\n        <mat-form-field>\\n          <input matInput class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'user.userName' | translate }}\\\" formControlName=\\\"userName\\\"\\n            [(ngModel)]=\\\"data.userName\\\">\\n          <mat-error *ngIf=\\\"form.controls.userName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n              <input matInput class=\\\"form-control\\\" [textMask]=\\\"{mask: mask}\\\" placeholder=\\\"{{ 'user.dateBrith' | translate }}\\\" formControlName=\\\"dateBrith\\\"\\n                [(ngModel)]=\\\"data.dateBrith\\\" required>\\n              <mat-error *ngIf=\\\"form.controls.dateBrith.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field>\\n            <input matInput class=\\\"form-control\\\" [textMask]=\\\"{mask: maskPhone}\\\" placeholder=\\\"{{ 'user.phone' | translate }}\\\" formControlName=\\\"cellPhone\\\"\\n              [(ngModel)]=\\\"data.cellPhone\\\">\\n            <!--<mat-error *ngIf=\\\"form.controls.cellPhone.invalid\\\">{{getErrorMessage() | translate}}</mat-error>-->\\n        </mat-form-field>\\n    </div>\\n    </section>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput class=\\\"form-control\\\" type=\\\"email\\\" placeholder=\\\"{{ 'user.email' | translate }}\\\" formControlName=\\\"email\\\" [(ngModel)]=\\\"data.email\\\"/>\\n      <mat-error *ngIf=\\\"form.controls.email.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n    </mat-form-field>\\n\\n\\n  </form>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n  <button class=\\\"mat-raised-button\\\" mat-button [type]=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" [mat-dialog-close]=\\\"1\\\"\\n    (click)=\\\"confirmAdd()\\\" translate>{{ 'save' | translate }}</button>\\n  <button class=\\\"mat-raised-button\\\" mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">{{ 'cancel' | translate }}</button>\\n</mat-dialog-actions>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-edit/user-edit.component.html\n// module id = ./src/app/user/user-edit/user-edit.component.html\n// module chunks = main","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { UserService } from '../../user/user.service';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { User } from '@app/user/user-model';\nimport { I18nService, extract } from '@app/core';\nimport { EmailValidator, CustomValidator } from '@app/shared/validators';\nimport { DateValidator } from '@app/shared/validators/date.validator';\nimport { PhoneValidator } from '@app/shared/validators/phone.validator';\n;\n\n@Component({\n  selector: 'app-edit.dialog',\n  templateUrl: './user-edit.component.html'\n})\n\nexport class UserEditDialogComponent {\n\n  hide: any;\n  hideConf: any;\n  confirmPassword: string;\n  user: User;\n\n  form: FormGroup;\n\n  perfis = [\n    {value: 0,  viewValue: 'Administrador'},\n    {value: 1,  viewValue: 'Operador'}\n  ];\n\n  acitves = [\n    {value: true,   viewValue: 'Sim'},\n    {value: false,  viewValue: 'Não'}\n  ];\n\n\n  public mask = [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/];\n  public maskPhone = ['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\n\n  constructor(public dialogRef: MatDialogRef<UserEditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: User,\n    public dataService: UserService,\n    public i18n: I18nService) {\n\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      fullName: new FormControl('', [Validators.required]),\n      userName: new FormControl('', [Validators.required]),\n      dateBrith: new FormControl('', [Validators.required, DateValidator.validDate]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      cellPhone: new FormControl('', [Validators.required]),\n      perfil: new FormControl('', [Validators.required]),\n      active: new FormControl('', [Validators.required])\n    });\n  }\n\n  getErrorMessage() {\n    return this.form.controls.email.hasError('required') ? 'fieldEmpty' :\n      this.form.controls.email.hasError('email') ? 'invalidEmail' :\n        this.form.controls.dateBrith.hasError('required') ? 'fieldEmpty' :\n          this.form.controls.dateBrith.hasError('date') ? 'invalidDate' :\n            this.form.controls.cellPhone.hasError('required') ? 'fieldEmpty' :\n              this.form.controls.cellPhone.hasError('phone') ? 'invalidPhone' :\n              this.form.controls.pefil.hasError('required') ? 'fieldEmpty' :\n              this.form.controls.active.hasError('required') ? 'fieldEmpty' :\n                '';\n  }\n\n  submit() {\n    // emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n\n    this.dataService.save(this.data);\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-edit/user-edit.component.ts","module.exports = \"\\n<div class=\\\"table-container mat-elevation-z8\\\">\\n\\n  \\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Digite o que procura\\\">\\n    </mat-form-field>\\n\\n\\n  <mat-table #table class=\\\"mat-table mat-elevation-z12\\\" [dataSource]=\\\"dataSource\\\" matSort>\\n\\n\\n\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'user.id' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let user\\\"> {{user.id}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- User Name Column -->\\n    <ng-container matColumnDef=\\\"userName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'user.userName' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let user\\\"> {{user.userName}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Full Name Column -->\\n    <ng-container matColumnDef=\\\"fullName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'user.fullName' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let user\\\"> {{user.fullName}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- cellPhone Column -->\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'user.email' | translate }}</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let user\\\"> {{user.email}} </mat-cell>\\n    </ng-container>\\n\\n\\n    <!-- actions -->\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n        </button>\\n      </mat-header-cell>\\n\\n      <mat-cell *matCellDef=\\\"let user; let i=index;\\\">\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"startEdit(i, user)\\\">\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n        </button>\\n\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"deleteItem(i, row.id, row.title, row.state, row.url)\\\">\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n        </button>\\n\\n        \\n      </mat-cell>\\n     \\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      \\n    </mat-row>\\n\\n  </mat-table>\\n  <mat-paginator [length]=\\\"100\\\"\\n              [pageSize]=\\\"100\\\"\\n              [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n  </mat-paginator>\\n</div>\\n \\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-list/user-list.component.html\n// module id = ./src/app/user/user-list/user-list.component.html\n// module chunks = main","module.exports = \"::ng-deep .column {\\n  width: 99%; }\\n\\n::ng-deep .full-width {\\n  width: 99%; }\\n\\n::ng-deep .auto-width {\\n  width: auto; }\\n\\n/* Clear floats after the columns */\\n\\n::ng-deep .row:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both; }\\n\\n::ng-deep .mat-dialog-title {\\n  background-color: #001E64;\\n  color: white;\\n  text-align: center; }\\n\\n::ng-deep .mat-dialog-container {\\n  overflow: hidden !important;\\n  border-radius: 5px !important;\\n  padding: 5px !important;\\n  background-color: #e0e4fa;\\n  height: -webkit-max-content;\\n  height: -moz-max-content;\\n  height: max-content; }\\n\\n::ng-deep .mat-dialog-actions {\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n\\n::ng-deep .mat-dialog-actions .mat-button {\\n    background-color: #001E64;\\n    -webkit-text-fill-color: white;\\n    margin-bottom: 15px; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:disabled(:first-child) {\\n      background-color: #001E64;\\n      -webkit-text-fill-color: black; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:not(:first-child), ::ng-deep .mat-dialog-actions .mat-button :not(:last-child) {\\n      -webkit-text-fill-color: white; }\\n\\n::ng-deep .flex-spacer {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto; }\\n\\n::ng-deep .mat-form-field {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-checkbox {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-radio-group {\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column; }\\n\\n::ng-deep .mat-radio-button {\\n  margin: 5px; }\\n\\n.selected-value {\\n  margin: 15px 0; }\\n\\n::ng-deep .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .span-label {\\n  font-size: 8px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-focused .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline .mat-form-field-ripple {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-button, .mat-raised-button {\\n  background-color: #001E64;\\n  -webkit-text-decoration-color: white;\\n          text-decoration-color: white; }\\n\\n::ng-deep .mat-success {\\n  background-color: #001E64;\\n  color: black; }\\n\\n::ng-deep .mat-button-focus {\\n  background-color: #001E64;\\n  color: black; }\\n\\n.mat-cell:nth-child(1),\\n.mat-header-cell:nth-child(1) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 40px;\\n          flex: 0 0 40px; }\\n\\n.mat-cell:nth-child(2),\\n.mat-header-cell:nth-child(2) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 350px;\\n          flex: 0 0 350px; }\\n\\n.mat-cell:nth-child(3),\\n.mat-header-cell:nth-child(3) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 200px;\\n          flex: 0 0 200px; }\\n\\n.mat-cell:nth-child(4),\\n.mat-header-cell:nth-child(4) {\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 300px;\\n          flex: 0 0 300px; }\\n\\n.mat-cell:nth-child(5) {\\n  -webkit-text-fill-color: #001E64; }\\n\\n.mat-header-cell:nth-child(6) {\\n  -webkit-text-fill-color: white;\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 10%;\\n          flex: 0 0 10%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-list/user-list.component.scss\n// module id = ./src/app/user/user-list/user-list.component.scss\n// module chunks = main","import { Component, ElementRef, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatPaginator,MatTableDataSource, MatSort, MatDialog, PageEvent } from '@angular/material';\n\nimport { User } from '@app/user/user-model';\nimport { UserAddDialogComponent } from '@app/user/user-add/user-add.component';\nimport { UserEditDialogComponent } from '@app/user/user-edit/user-edit.component';\nimport { I18nService } from '@app/core';\nimport { UserService } from '@app/user/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\n\n\n\nexport class UserListComponent implements AfterViewInit {\n  \n  error: HttpErrorResponse;\n  displayedColumns = ['id', 'fullName', 'userName', 'email', 'actions'];\n  ELEMENT_DATA: User[]; \n\n  isExpansionDetailRow = (i: number, row: any) => \n  row.hasOwnProperty('detailRow');\n  constructor( public dialog: MatDialog,\n               public dataService: UserService,\n               public i18nService: I18nService) { \n\n  }\n\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions = [5, 10, 25, 100];\n\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild('filter') filter: ElementRef;\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  ngAfterViewInit() {\n    this.loadData();\n    this.dataSource.sort      = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  addNew(user: User) {\n    const dialogRef = this.dialog.open(UserAddDialogComponent, {data: {user: User},\n      height: 'max-content',\n      width: 'max-content'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        // this.dataSource.dataChange.value.push(this.dataService.getDialogData());\n        //this.refreshTable();\n      }\n    });\n  }\n\n  startEdit(i: number) {\n    let userEdit = this.ELEMENT_DATA[i];\n    console.log(JSON.stringify(userEdit));\n    const dialogRef = this.dialog.open(UserEditDialogComponent, {data:userEdit,\n      height: 'max-content+10px',\n      width: 'max-content'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        // this.dataSource.dataChange.value.push(this.dataService.getDialogData());\n        //this.dataSource.refreshTable();\n      }\n    });\n  }\n\n  deleteItem(i: number, id: number, title: string, state: string, url: string) {\n    \n  }\n\n\n \n  public loadData() {\n\n      this.dataService.getAllUsers()\n                      .subscribe(\n                        data => {\n                          this.ELEMENT_DATA = data;\n                          this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n                        },\n                        error => {\n                          this.error = error;\n                          alert(error); \n                        });\n    \n  } \n    \n \n      \n    \n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-list/user-list.component.ts","import { DataModel } from \"@app/core/model/datamodel\";\r\nimport { RegisterCNPJ } from \"@app/cnpj/cnpj-model\";\r\n\r\nexport class User extends DataModel {\r\n     id: number;\r\n     userName:string;\r\n     fullName:string;\r\n     email:string;\r\n     cellPhone:string;\r\n     dateBrith:Date;\r\n     password:string;\r\n     active:boolean;\r\n     insertUser:User;\r\n     insertDate:Date;\r\n     updateUser:User;\r\n     updateDate:Date;\r\n     perfil: number;\r\n     registersCnpj: RegisterCNPJ[]; \r\n    /*constructor( \r\n         id: number,\r\n         userName:string,\r\n         fullName:string,\r\n         email:string,\r\n         cellPhone:string,\r\n         dateBrith:Date,\r\n         password:string,\r\n         active:boolean,\r\n         insertUser:User,\r\n         insertDate:Date,\r\n         updateUser:User,\r\n         updateDate:Date,\r\n         perfil: number){\r\n        super(id)\r\n        this.id = id;\r\n        this.userName = userName;\r\n        this.fullName = fullName;\r\n        this.email    = email;\r\n        this.cellPhone = cellPhone;\r\n        this.dateBrith = dateBrith;\r\n        this.password  = password;\r\n        this.active    = active;\r\n        this.insertUser = insertUser;\r\n        this.insertDate = insertDate;\r\n        this.updateUser = updateUser;\r\n        this.updateDate = updateDate;\r\n        this.perfil = perfil;\r\n    };*/\r\n    constructor(){\r\n        super(null);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-model.ts","module.exports = \"<div style=\\\"height: max-content;\\\" class=\\\"table-container mat-elevation-z8\\\">\\n    <mat-card class=\\\"param-container\\\">\\n  \\n<mat-card-content >\\n  <form (ngSubmit)=\\\"submit\\\" [formGroup]=\\\"form\\\">\\n    \\n      <div layout=\\\"row\\\"  layout-align=\\\"space-between center\\\" fix>\\n\\n        <mat-form-field>\\n          <input matInput #input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'user.fullName' | translate }}\\\" formControlName=\\\"fullName\\\"\\n            [(ngModel)]=\\\"data.fullName\\\">\\n          <mat-error *ngIf=\\\"form.controls.fullName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'user.userName' | translate }}\\\" formControlName=\\\"userName\\\"\\n            [(ngModel)]=\\\"data.userName\\\">\\n          <mat-error *ngIf=\\\"form.controls.userName.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n        </mat-form-field>\\n\\n        <!-- <mat-form-field>\\n              <input matInput class=\\\"form-control\\\" [textMask]=\\\"{mask: mask}\\\" placeholder=\\\"{{ 'user.dateBrith' | translate }}\\\" formControlName=\\\"dateBrith\\\"\\n                [(ngModel)]=\\\"data.dateBrith\\\" required>\\n              <mat-error *ngIf=\\\"form.controls.dateBrith.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field>\\n            <input matInput class=\\\"form-control\\\" [textMask]=\\\"{mask: maskPhone}\\\" placeholder=\\\"{{ 'user.phone' | translate }}\\\" formControlName=\\\"cellPhone\\\"\\n              [(ngModel)]=\\\"data.cellPhone\\\">\\n           <mat-error *ngIf=\\\"form.controls.cellPhone.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n        </mat-form-field>--> \\n\\n        \\n        <mat-form-field >\\n          <input matInput class=\\\"form-control\\\" type=\\\"email\\\" placeholder=\\\"{{ 'user.email' | translate }}\\\" formControlName=\\\"email\\\" [(ngModel)]=\\\"data.email\\\"/>\\n          <mat-error *ngIf=\\\"form.controls.email.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\n        </mat-form-field>\\n    </div>\\n\\n   <div class=\\\"table-container mat-elevation-z4\\\">\\n\\n\\n      <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Digite o que procura\\\">\\n      </mat-form-field>\\n    \\n    \\n      <mat-table #table class=\\\"mat-table \\\" [dataSource]=\\\"dataSource\\\" matSort>\\n        \\n        <!-- CNPJ Column -->\\n        <ng-container matColumnDef=\\\"cnpj\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'registerCnpj.cnpj' | translate }}</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let CNPJ\\\"> {{maskCnpj(CNPJ.cnpj)}} </mat-cell>\\n        </ng-container>\\n    \\n        <!-- Full Name Column -->\\n        <ng-container matColumnDef=\\\"fullName\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'registerCnpj.fullName' | translate }}</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let CNPJ\\\"> {{CNPJ.fullName}} </mat-cell>\\n        </ng-container>\\n    \\n        <!-- category Column -->\\n        <ng-container matColumnDef=\\\"category\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'registerCnpj.category' | translate }}</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let CNPJ\\\"> {{ getCategory(CNPJ.category)}} </mat-cell>\\n          </ng-container>\\n    \\n    \\n        <!-- actions -->\\n        <ng-container matColumnDef=\\\"actions\\\">\\n          <mat-header-cell *matHeaderCellDef>\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\n              <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n            </button>\\n          </mat-header-cell>\\n    \\n          <mat-cell *matCellDef=\\\"let CNPJ; let i=index;\\\">\\n            <!-- <button mat-icon-button color=\\\"accent\\\" (click)=\\\"startEdit(i, CNPJ)\\\">\\n              <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n            </button> -->\\n    \\n            <button mat-icon-button color=\\\"accent\\\" (click)=\\\"deleteItem(CNPJ.id)\\\">\\n              <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n            </button>\\n    \\n    \\n          </mat-cell>\\n    \\n        </ng-container>\\n    \\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n    \\n        </mat-row>\\n    \\n      </mat-table>\\n      <mat-paginator [length]=\\\"100\\\" [pageSize]=\\\"100\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n      </mat-paginator>\\n    </div>\\n\\n    \\n  </form>\\n  <mat-dialog-actions>\\n      <button class=\\\"mat-raised-button\\\" mat-button [type]=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"\\n        (click)=\\\"confirmAdd()\\\" translate>{{ 'save' | translate }}</button>\\n      <button class=\\\"mat-raised-button\\\" mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">{{ 'cancel' | translate }}</button>\\n    </mat-dialog-actions>\\n  </mat-card-content >  \\n  </mat-card>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-profile/user-profile.component.html\n// module id = ./src/app/user/user-profile/user-profile.component.html\n// module chunks = main","module.exports = \"::ng-deep .column {\\n  width: 99%; }\\n\\n::ng-deep .full-width {\\n  width: 99%; }\\n\\n::ng-deep .auto-width {\\n  width: auto; }\\n\\n/* Clear floats after the columns */\\n\\n::ng-deep .row:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both; }\\n\\n::ng-deep .mat-dialog-title {\\n  background-color: #001E64;\\n  color: white;\\n  text-align: center; }\\n\\n::ng-deep .mat-dialog-container {\\n  overflow: hidden !important;\\n  border-radius: 5px !important;\\n  padding: 5px !important;\\n  background-color: #e0e4fa;\\n  height: -webkit-max-content;\\n  height: -moz-max-content;\\n  height: max-content; }\\n\\n::ng-deep .mat-dialog-actions {\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n\\n::ng-deep .mat-dialog-actions .mat-button {\\n    background-color: #001E64;\\n    -webkit-text-fill-color: white;\\n    margin-bottom: 15px; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:disabled(:first-child) {\\n      background-color: #001E64;\\n      -webkit-text-fill-color: black; }\\n\\n::ng-deep .mat-dialog-actions .mat-button:not(:first-child), ::ng-deep .mat-dialog-actions .mat-button :not(:last-child) {\\n      -webkit-text-fill-color: white; }\\n\\n::ng-deep .flex-spacer {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto; }\\n\\n::ng-deep .mat-form-field {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-checkbox {\\n  font-size: 14px;\\n  margin: 2px;\\n  font-weight: bold;\\n  background-color: inherit; }\\n\\n::ng-deep .mat-radio-group {\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column; }\\n\\n::ng-deep .mat-radio-button {\\n  margin: 5px; }\\n\\n.selected-value {\\n  margin: 15px 0; }\\n\\n::ng-deep .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .span-label {\\n  font-size: 8px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-focused .mat-form-field-placeholder {\\n  font-weight: bold;\\n  font-size: 14px;\\n  -webkit-text-fill-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline .mat-form-field-ripple {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-form-field-underline {\\n  background-color: #001E64; }\\n\\n::ng-deep .mat-button, .mat-raised-button {\\n  background-color: #001E64;\\n  -webkit-text-decoration-color: white;\\n          text-decoration-color: white; }\\n\\n::ng-deep .mat-success {\\n  background-color: #001E64;\\n  color: black; }\\n\\n::ng-deep .mat-button-focus {\\n  background-color: #001E64;\\n  color: black; }\\n\\n.param-container {\\n  background-color: #e0e4fa; }\\n\\n.version {\\n  width: 20%; }\\n\\n.systemName {\\n  width: 40%; }\\n\\n.cnpj {\\n  width: 20%; }\\n\\n.socialName {\\n  width: 40%; }\\n\\n.codeZip {\\n  width: 20%; }\\n\\n.address {\\n  width: 40%; }\\n\\n.number {\\n  width: 10%; }\\n\\n.neighborhood {\\n  width: 20%; }\\n\\n.city {\\n  width: 20%; }\\n\\n.state {\\n  width: 5%; }\\n\\n.emailClient {\\n  width: 34%; }\\n\\n.responsiblePerson {\\n  width: 30%; }\\n\\n.emailReponsible {\\n  width: 45%; }\\n\\n.emailDefault {\\n  width: 46%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-profile/user-profile.component.scss\n// module id = ./src/app/user/user-profile/user-profile.component.scss\n// module chunks = main","import { Component, Inject, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UserService } from '../../user/user.service';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { User } from '@app/user/user-model';\nimport { I18nService, extract, AuthenticationService } from '@app/core';\nimport { EmailValidator, CustomValidator } from '@app/shared/validators';\nimport { DateValidator } from '@app/shared/validators/date.validator';\nimport { PhoneValidator } from '@app/shared/validators/phone.validator';\nimport { MAT_DIALOG_DATA, MatTableDataSource, MatSort, MatPaginator, MatDialog } from '@angular/material';\nimport { RegisterCNPJ } from '@app/cnpj/cnpj-model';\nimport { CNPJAddDialogComponent } from '@app/cnpj/cnpj-add/cnpj-add.component';\nimport { CNPJDialogComponent } from '@app/cnpj/cnpj-dialog/cnpj-dialog.component';\n;\n\n@Component({\n  selector: 'app-user.profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\n\nexport class UserProfileComponent {\n\n  displayedColumns = ['cnpj', 'fullName', 'category','actions'];\n  ELEMENT_DATA: RegisterCNPJ[]; \n\n  hide: any;\n  hideConf: any;\n  confirmPassword: string;\n  user: User;\n  \n  form: FormGroup;\n\n\n  public categorys = [\n    'Alimentos',\n    'Cosmeticos',\n    'Saneantes',\n    'Todos'\n  ];\n\n  perfis = [\n    {value: 0,  viewValue: 'Administrador'},\n    {value: 1,  viewValue: 'Operador'}\n  ];\n\n  acitves = [\n    {value: true,   viewValue: 'Sim'},\n    {value: false,  viewValue: 'Não'}\n  ];\n\n\n  public mask = [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/];\n  public maskPhone = ['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\n\n  constructor(public dialog: MatDialog,\n    public data: User,\n    public dataService: UserService,\n    private authenticationService: AuthenticationService,\n    public i18n: I18nService) {\n\n  }\n\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions = [5, 10, 25, 100];\n\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild('filter') filter: ElementRef;\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort      = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n  \n  ngOnInit() {\n    this.loadUser();\n    this.form = new FormGroup({\n      fullName: new FormControl('', [Validators.required]),\n      userName: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email])\n      //dateBrith: new FormControl('', [Validators.required]),\n      //cellPhone: new FormControl('', [])\n    });\n  }\n\n  getErrorMessage() {\n    return this.form.controls.email.hasError('required') ? 'fieldEmpty' :\n    this.form.controls.email.hasError('email') ? 'invalidEmail' :\n        '';\n        // this.form.controls.dateBrith.hasError('required') ? 'fieldEmpty' :\n        // this.form.controls.dateBrith.hasError('date') ? 'invalidDate' :\n        // this.form.controls.cellPhone.hasError('required') ? 'fieldEmpty' :\n        // this.form.controls.cellPhone.hasError('phone') ? 'invalidPhone' :\n        // this.form.controls.pefil.hasError('required') ? 'fieldEmpty' :\n        // this.form.controls.active.hasError('required') ? 'fieldEmpty' :\n                //'';\n  }\n\n  submit() {\n    // emppty stuff\n  }\n\n  onNoClick(): void {\n    //this.dialogRef.close();\n  }\n\n  loadUser() {\n    this.authenticationService.loadUser(null)\n      .subscribe(\n        data => {\n          this.data = data;\n          this.ELEMENT_DATA = this.data['registerCNPJs'];\n          this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n        },\n        error => {\n          alert(error);\n        });\n  }\n\n  public confirmAdd(): void {\n\n    this.dataService.save(this.data);\n\n  }\n\n  addNew(registerCnpj: RegisterCNPJ) {\n    const dialogRef = this.dialog.open(CNPJDialogComponent, {data: {registerCNPJ: registerCnpj},\n      height: 'max-content+10px',\n      width: 'max-content'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        // this.dataSource.dataChange.value.push(this.dataService.getDialogData());\n        //this.refreshTable();\n        //this.dataSource.data.push(this.dataService.getDialogData());\n      }\n    });\n  }\n\n  public getCategory(category: number): string {\n    return this.categorys[category]; \n  }\n  maskCnpj(valor: string):string {\n    return valor.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/g,\"\\$1.\\$2.\\$3\\/\\$4\\-\\$5\");\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-profile/user-profile.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from '@app/user/user-list/user-list.component';\nimport { Route, extract } from '@app/core';\nimport { UserProfileComponent } from '@app/user/user-profile/user-profile.component';\n\nconst routes: Routes = [\n  Route.withShell([\n    { path: 'userList', component: UserListComponent, data: { title: extract('User') }},\n    { path: 'userProfile', component: UserProfileComponent, data: { title: extract('userProfile') } }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class UserRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-routing.module.ts","import { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { MaterialModule } from '@app/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { UserAddDialogComponent } from './user-add/user-add.component';\nimport { UserEditDialogComponent } from './user-edit/user-edit.component';\nimport { UserService } from '@app/user/user.service';\nimport { SharedModule } from '../shared';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { UserProfileComponent } from '@app/user/user-profile/user-profile.component';\nimport { User } from '@app/user/user-model';\nimport { UserCNPJComponent } from '@app/user/user-cnpj/user-cnpj.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FlexLayoutModule,\n    MaterialModule,\n    FormsModule, ReactiveFormsModule,\n    BrowserAnimationsModule,\n    UserRoutingModule,\n    SharedModule,\n    TextMaskModule\n  ],\n  exports:[UserListComponent],\n  entryComponents: [\n    UserAddDialogComponent,UserEditDialogComponent,UserCNPJComponent],\n  declarations: [UserListComponent, UserAddDialogComponent,UserEditDialogComponent, UserCNPJComponent,UserProfileComponent],\n  providers:[UserService,User],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class UserModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user.module.ts","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport 'rxjs/Rx';\nimport {User} from '../user/user-model';\nimport {HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Headers, Http } from '@angular/http';\n \nimport 'rxjs/add/operator/toPromise';\n\nimport { Alert, error } from 'selenium-webdriver';\nimport { environment } from '@env/environment';\n\n\n@Injectable()\nexport class UserService {\n  private readonly API_URL = '/user';\n  \n  dataChange: Observable<User[]> = new Observable<User[]>();\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  private headers = new Headers({'Content-Type': 'application/json'});\n  constructor (private httpClient: HttpClient) {\n     \n  }\n\n  get data(): Observable<User[]> {\n    return this.dataChange;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  /** CRUD METHODS */\n  getAllUsers(): Observable<User[]> {\n    return this.httpClient.get(this.API_URL+'/list')\n                    .map(response => response)\n                    .catch(error=> Observable.throw(error.message));\n  }\n\n  // DEMO ONLY, you can find working methods below\n  save (user: User): void {\n    //this.dialogData = user;\n    console.log(JSON.stringify(user));\n\n    this.httpClient.post(this.API_URL+'/save', user).subscribe(data => {\n      //this.dialogData = user;\n      \n      alert('Successfully added');\n      },\n      (err: HttpErrorResponse) => {\n        alert('Error occurred. Details: ' + err.name + ' ' + err.message);\n    });\n  }\n\n  updateUser (user: User): void {\n    this.dialogData = user;\n  }\n\n  deleteUser (id: number): void {\n    console.log(id);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  version: '(dev)',\r\n  serverUrl:'http://findinfo.kinghost.net/neapi',\r\n  defaultLanguage: 'pt-BR',\r\n  supportedLanguages: [\r\n    'pt-BR'\r\n  ]\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","/*\n * Entry point of the application.\n * Only platform bootstrapping code should be here.\n * For app-specific initialization, use `app/app.component.ts`.\n */\n\nimport 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from '@env/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","module.exports = {\"APP_NAME\":\"Find Anvisa\",\"About\":\"Sobre\",\"Inquiries\":\"Consultas\",\"Hello world !\":\"Alô Mundo !\",\"Home\":\"Find Anvisa\",\"Logged in as\":\"Conectado como \",\"profile\":\"Meus Dados\",\"Login\":\"Entrar\",\"lostpassword\":\"Esqueci minha senha.\",\"RegisterUser\":\"Crie seu usuário\",\"fullName\":\"Nome Completo\",\"Redefine\":\"Redefinir Senha\",\"Logout\":\"Sair\",\"Password\":\"Senha\",\"ConfirmPassword\":\"Confirme a Senha\",\"Password is required\":\"Senha é requerida\",\"RedefinePasswordInvalid\":\"Senha é requerida ou confimação no confere é igual a senha.\",\"Username\":\"Nome do Usuário\",\"Username is required\":\"Nome do Usuário e requerido\",\"Username or password incorrect.\":\"Usuário ou senha incorreta.\",\"remember.me\":\"Lembre-me\",\"Version\":\"Versão\",\"RecordsConsultation\":\"Registros\",\"ProcessConsulting\":\"Processos\",\"Synchronization\":\"Sincronismo (LOG)\",\"Register\":\"Cadastro\",\"Parameters\":\"Parametros\",\"GenericParameters\":\"Parametros Gerais\",\"UpdateParameters\":\"Parâmetros de Atualização\",\"Security\":\"Segurança\",\"User\":\"Usuários\",\"user.insert\":\"Cadastrar Usuário\",\"user.update\":\"Alterar Usuário\",\"user.delete\":\"Excluir Usuário\",\"user.id\":\"Id\",\"user.userName\":\"Nome do Usuário\",\"user.fullName\":\"Nome Completo\",\"user.dateBrith\":\"Data de Aniversário\",\"user.phone\":\"Telefone\",\"user.email\":\"Email\",\"user.password\":\"Senha\",\"user.confirmPassword\":\"Confirme Senha\",\"login\":\"Login do usuário\",\"login.userName\":\"Usuario ou Email\",\"login.password\":\"Senha\",\"save\":\"Salvar\",\"send\":\"Enviar\",\"cancel\":\"Cancelar\",\"fieldEmpty\":\"Este campo deve ser informado!\",\"invalidEmail\":\"email inválido!\",\"invalidDate\":\"Data inválida!\",\"GenericParameter\":\"Parâmetros Gerais\",\"genericParameter.version\":\"Versão do Sistema\",\"genericParameter.systemName\":\"Nome do Sistema\",\"genericParameter.socialName\":\"Razão Social\",\"genericParameter.cnpj\":\"CNPJ\",\"genericParameter.codeZip\":\"CEP\",\"genericParameter.address\":\"Endereço\",\"genericParameter.number\":\"Numero\",\"genericParameter.neighborhood\":\"Bairro\",\"genericParameter.city\":\"Cidade\",\"genericParameter.state\":\"UF\",\"genericParameter.emailClient\":\"E-mail Cliente\",\"genericParameter.responsiblePerson\":\"Pessoa Responsável\",\"genericParameter.emailReponsible\":\"E-mail do Responsável\",\"genericParameter.emailDefault\":\"E-mail padrão\",\"genericParameter.contactPerson\":\"Pessoal de Contato\",\"genericParameter.emailSuport\":\"E-mail de Suporte\",\"genericParameter.phoneSuport\":\"Fone Suporte\",\"UpdateParameter\":\"Parâmetros de Atualização\",\"registerCnpj.insert\":\"Registro CNPJ\",\"registerCnpj.edit\":\"Registro CNPJ\",\"registerCnpj.cnpj\":\"CNPJ\",\"registerCnpj.fullName\":\"Nome Completo\",\"registerCnpj.category\":\"Categoria\",\"registerCnpj.active\":\"Ativo\",\"queryRecords\":\"Consulta Registros\",\"queryRecord.subjectMatter\":\"Assunto\",\"queryRecord.process\":\"Processo\",\"queryRecord.year\":\"Ano\",\"queryRecord.transaction\":\"Transação\",\"queryRecord.product\":\"Produto\",\"queryRecord.company\":\"Empresa\",\"queryRecord.situation\":\"Situação\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/translations/pt-BR.json\n// module id = ./src/translations/pt-BR.json\n// module chunks = main"],"sourceRoot":"webpack:///"}